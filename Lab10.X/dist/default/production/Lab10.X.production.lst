

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat May 08 01:02:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205                           
   206                           	psect	idataCOMMON
   207  0709                     __pidataCOMMON:
   208                           
   209                           ;initializer for _word
   210  0709  346C               	retlw	108
   211  070A  346F               	retlw	111
   212  070B  346C               	retlw	108
   213  070C  3400               	retlw	0
   214  001A                     _RCREG	set	26
   215  000C                     _PIR1bits	set	12
   216  0018                     _RCSTAbits	set	24
   217  000B                     _INTCONbits	set	11
   218  0006                     _PORTB	set	6
   219  0005                     _PORTA	set	5
   220  0019                     _TXREG	set	25
   221  0065                     _RCIF	set	101
   222  008C                     _PIE1bits	set	140
   223  0099                     _SPBRG	set	153
   224  008F                     _OSCCON	set	143
   225  0086                     _TRISB	set	134
   226  0085                     _TRISA	set	133
   227  0098                     _TXSTAbits	set	152
   228  0187                     _BAUDCTLbits	set	391
   229  0188                     _ANSEL	set	392
   230  0189                     _ANSELH	set	393
   231                           
   232                           	psect	strings
   233  0003                     __pstrings:
   234  0003                     stringtab:
   235  0003                     __stringtab:
   236  0003                     stringcode:	
   237                           ;	String table - string pointers are 1 byte each
   238                           
   239  0003                     stringdir:
   240  0003  3000               	movlw	high stringdir
   241  0004  008A               	movwf	10
   242  0005  0804               	movf	4,w
   243  0006  0A84               	incf	4,f
   244  0007  0782               	addwf	2,f
   245  0008                     __stringbase:
   246  0008  3400               	retlw	0
   247  0009                     __end_of__stringtab:
   248  0009                     STR_2:
   249  0009  345B               	retlw	91	;'['
   250  000A  3431               	retlw	49	;'1'
   251  000B  345D               	retlw	93	;']'
   252  000C  3420               	retlw	32	;' '
   253  000D  3444               	retlw	68	;'D'
   254  000E  3465               	retlw	101	;'e'
   255  000F  3473               	retlw	115	;'s'
   256  0010  3470               	retlw	112	;'p'
   257  0011  346C               	retlw	108	;'l'
   258  0012  3465               	retlw	101	;'e'
   259  0013  3467               	retlw	103	;'g'
   260  0014  3461               	retlw	97	;'a'
   261  0015  3472               	retlw	114	;'r'
   262  0016  3420               	retlw	32	;' '
   263  0017  3443               	retlw	67	;'C'
   264  0018  3461               	retlw	97	;'a'
   265  0019  3464               	retlw	100	;'d'
   266  001A  3465               	retlw	101	;'e'
   267  001B  346E               	retlw	110	;'n'
   268  001C  3461               	retlw	97	;'a'
   269  001D  3420               	retlw	32	;' '
   270  001E  3464               	retlw	100	;'d'
   271  001F  3465               	retlw	101	;'e'
   272  0020  3420               	retlw	32	;' '
   273  0021  3443               	retlw	67	;'C'
   274  0022  3461               	retlw	97	;'a'
   275  0023  3472               	retlw	114	;'r'
   276  0024  3461               	retlw	97	;'a'
   277  0025  3463               	retlw	99	;'c'
   278  0026  3474               	retlw	116	;'t'
   279  0027  3465               	retlw	101	;'e'
   280  0028  3472               	retlw	114	;'r'
   281  0029  3465               	retlw	101	;'e'
   282  002A  3473               	retlw	115	;'s'
   283  002B  3420               	retlw	32	;' '
   284  002C  340D               	retlw	13
   285  002D  3420               	retlw	32	;' '
   286  002E  3400               	retlw	0
   287  002F  3400               	retlw	0
   288  0030                     STR_1:
   289  0030  3451               	retlw	81	;'Q'
   290  0031  3475               	retlw	117	;'u'
   291  0032  3465               	retlw	101	;'e'
   292  0033  3420               	retlw	32	;' '
   293  0034  3461               	retlw	97	;'a'
   294  0035  3463               	retlw	99	;'c'
   295  0036  3463               	retlw	99	;'c'
   296  0037  3469               	retlw	105	;'i'
   297  0038  346F               	retlw	111	;'o'
   298  0039  346E               	retlw	110	;'n'
   299  003A  3420               	retlw	32	;' '
   300  003B  3464               	retlw	100	;'d'
   301  003C  3465               	retlw	101	;'e'
   302  003D  3473               	retlw	115	;'s'
   303  003E  3465               	retlw	101	;'e'
   304  003F  3461               	retlw	97	;'a'
   305  0040  3420               	retlw	32	;' '
   306  0041  3465               	retlw	101	;'e'
   307  0042  346A               	retlw	106	;'j'
   308  0043  3465               	retlw	101	;'e'
   309  0044  3463               	retlw	99	;'c'
   310  0045  3475               	retlw	117	;'u'
   311  0046  3474               	retlw	116	;'t'
   312  0047  3461               	retlw	97	;'a'
   313  0048  3472               	retlw	114	;'r'
   314  0049  343F               	retlw	63	;'?'
   315  004A  3420               	retlw	32	;' '
   316  004B  340D               	retlw	13
   317  004C  3420               	retlw	32	;' '
   318  004D  3400               	retlw	0
   319  004E  3400               	retlw	0
   320  004F                     STR_6:
   321  004F  3449               	retlw	73	;'I'
   322  0050  346E               	retlw	110	;'n'
   323  0051  3467               	retlw	103	;'g'
   324  0052  3472               	retlw	114	;'r'
   325  0053  3465               	retlw	101	;'e'
   326  0054  3473               	retlw	115	;'s'
   327  0055  3465               	retlw	101	;'e'
   328  0056  3420               	retlw	32	;' '
   329  0057  3465               	retlw	101	;'e'
   330  0058  346C               	retlw	108	;'l'
   331  0059  3420               	retlw	32	;' '
   332  005A  3476               	retlw	118	;'v'
   333  005B  3461               	retlw	97	;'a'
   334  005C  346C               	retlw	108	;'l'
   335  005D  346F               	retlw	111	;'o'
   336  005E  3472               	retlw	114	;'r'
   337  005F  343A               	retlw	58	;':'
   338  0060  3420               	retlw	32	;' '
   339  0061  340D               	retlw	13
   340  0062  3420               	retlw	32	;' '
   341  0063  3400               	retlw	0
   342  0064  3400               	retlw	0
   343  0065                     STR_3:
   344  0065  345B               	retlw	91	;'['
   345  0066  3432               	retlw	50	;'2'
   346  0067  345D               	retlw	93	;']'
   347  0068  3420               	retlw	32	;' '
   348  0069  3443               	retlw	67	;'C'
   349  006A  3461               	retlw	97	;'a'
   350  006B  346D               	retlw	109	;'m'
   351  006C  3462               	retlw	98	;'b'
   352  006D  3469               	retlw	105	;'i'
   353  006E  3461               	retlw	97	;'a'
   354  006F  3472               	retlw	114	;'r'
   355  0070  3420               	retlw	32	;' '
   356  0071  3450               	retlw	80	;'P'
   357  0072  344F               	retlw	79	;'O'
   358  0073  3452               	retlw	82	;'R'
   359  0074  3454               	retlw	84	;'T'
   360  0075  3441               	retlw	65	;'A'
   361  0076  3420               	retlw	32	;' '
   362  0077  340D               	retlw	13
   363  0078  3420               	retlw	32	;' '
   364  0079  3400               	retlw	0
   365  007A  3400               	retlw	0
   366  007B                     STR_4:
   367  007B  345B               	retlw	91	;'['
   368  007C  3433               	retlw	51	;'3'
   369  007D  345D               	retlw	93	;']'
   370  007E  3420               	retlw	32	;' '
   371  007F  3443               	retlw	67	;'C'
   372  0080  3461               	retlw	97	;'a'
   373  0081  346D               	retlw	109	;'m'
   374  0082  3462               	retlw	98	;'b'
   375  0083  3469               	retlw	105	;'i'
   376  0084  3461               	retlw	97	;'a'
   377  0085  3472               	retlw	114	;'r'
   378  0086  3420               	retlw	32	;' '
   379  0087  3450               	retlw	80	;'P'
   380  0088  344F               	retlw	79	;'O'
   381  0089  3452               	retlw	82	;'R'
   382  008A  3454               	retlw	84	;'T'
   383  008B  3442               	retlw	66	;'B'
   384  008C  3420               	retlw	32	;' '
   385  008D  340D               	retlw	13
   386  008E  3420               	retlw	32	;' '
   387  008F  3400               	retlw	0
   388  0090  3400               	retlw	0
   389  0091                     STR_5:
   390  0091  3442               	retlw	66	;'B'
   391  0092  3475               	retlw	117	;'u'
   392  0093  3465               	retlw	101	;'e'
   393  0094  346E               	retlw	110	;'n'
   394  0095  3461               	retlw	97	;'a'
   395  0096  3473               	retlw	115	;'s'
   396  0097  3420               	retlw	32	;' '
   397  0098  346A               	retlw	106	;'j'
   398  0099  346F               	retlw	111	;'o'
   399  009A  3476               	retlw	118	;'v'
   400  009B  3465               	retlw	101	;'e'
   401  009C  346E               	retlw	110	;'n'
   402  009D  3465               	retlw	101	;'e'
   403  009E  3473               	retlw	115	;'s'
   404  009F  3420               	retlw	32	;' '
   405  00A0  340D               	retlw	13
   406  00A1  3420               	retlw	32	;' '
   407  00A2  3400               	retlw	0
   408  00A3  3400               	retlw	0
   409  004F                     
   410                           	psect	cinit
   411  07E2                     start_initialization:	
   412                           ; #config settings
   413                           
   414  07E2                     __initialization:
   415                           
   416                           ; Initialize objects allocated to COMMON
   417  07E2  120A  118A  2709  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   418  07E7  00F5               	movwf	__pdataCOMMON& (0+127)
   419  07E8  120A  118A  270A  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   420  07ED  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   421  07EE  120A  118A  270B  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   422  07F3  00F7               	movwf	(__pdataCOMMON+2)& (0+127)
   423  07F4  120A  118A  270C  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   424  07F9  00F8               	movwf	(__pdataCOMMON+3)& (0+127)
   425                           
   426                           ; Clear objects allocated to COMMON
   427  07FA  01F9               	clrf	__pbssCOMMON& (0+127)
   428  07FB  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   429  07FC                     end_of_initialization:	
   430                           ;End of C runtime variable initialization code
   431                           
   432  07FC                     __end_of__initialization:
   433  07FC  0183               	clrf	3
   434  07FD  120A  118A  2F30   	ljmp	_main	;jump to C main() function
   435                           
   436                           	psect	bssCOMMON
   437  0079                     __pbssCOMMON:
   438  0079                     _op:
   439  0079                     	ds	2
   440                           
   441                           	psect	dataCOMMON
   442  0075                     __pdataCOMMON:
   443  0075                     _word:
   444  0075                     	ds	4
   445                           
   446                           	psect	cstackCOMMON
   447  0070                     __pcstackCOMMON:
   448  0070                     ?_UART_write:
   449  0070                     ??_UART_write:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_main:	
   453                           ; 1 bytes @ 0x0
   454                           
   455                           
   456                           ; 1 bytes @ 0x0
   457  0070                     	ds	1
   458  0071                     UART_write@word:
   459                           
   460                           ; 1 bytes @ 0x1
   461  0071                     	ds	1
   462  0072                     ??_main:
   463                           
   464                           ; 1 bytes @ 0x2
   465  0072                     	ds	3
   466                           
   467                           	psect	maintext
   468  0730                     __pmaintext:	
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 43 in file "Lab10.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B00/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0
   490 ;;      Temps:          3       0       0       0       0
   491 ;;      Totals:         3       0       0       0       0
   492 ;;Total ram usage:        3 bytes
   493 ;; Hardware stack levels required when called:    2
   494 ;; This function calls:
   495 ;;		_UART_write
   496 ;; This function is called by:
   497 ;;		Startup code after reset
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _main
   503  0730                     _main:
   504  0730                     l747:	
   505                           ;incstack = 0
   506                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   507                           
   508                           
   509                           ;Lab10.c: 45:     ANSELH = 0;
   510  0730  1683               	bsf	3,5	;RP0=1, select bank3
   511  0731  1703               	bsf	3,6	;RP1=1, select bank3
   512  0732  0189               	clrf	9	;volatile
   513                           
   514                           ;Lab10.c: 46:     ANSEL = 0;
   515  0733  0188               	clrf	8	;volatile
   516                           
   517                           ;Lab10.c: 48:     TRISA = 0x00;
   518  0734  1683               	bsf	3,5	;RP0=1, select bank1
   519  0735  1303               	bcf	3,6	;RP1=0, select bank1
   520  0736  0185               	clrf	5	;volatile
   521                           
   522                           ;Lab10.c: 49:     TRISB = 0x00;
   523  0737  0186               	clrf	6	;volatile
   524                           
   525                           ;Lab10.c: 50:     PORTA = 0;
   526  0738  1283               	bcf	3,5	;RP0=0, select bank0
   527  0739  1303               	bcf	3,6	;RP1=0, select bank0
   528  073A  0185               	clrf	5	;volatile
   529                           
   530                           ;Lab10.c: 51:     PORTB = 0;
   531  073B  0186               	clrf	6	;volatile
   532  073C                     l749:
   533                           
   534                           ;Lab10.c: 52:     OSCCON = 0B1110111;
   535  073C  3077               	movlw	119
   536  073D  1683               	bsf	3,5	;RP0=1, select bank1
   537  073E  1303               	bcf	3,6	;RP1=0, select bank1
   538  073F  008F               	movwf	15	;volatile
   539  0740                     l751:
   540                           
   541                           ;Lab10.c: 54:     INTCONbits.INTE = 1;
   542  0740  160B               	bsf	11,4	;volatile
   543  0741                     l753:
   544                           
   545                           ;Lab10.c: 55:     INTCONbits.PEIE = 1;
   546  0741  170B               	bsf	11,6	;volatile
   547  0742                     l755:
   548                           
   549                           ;Lab10.c: 60:     SPBRG = 12;
   550  0742  300C               	movlw	12
   551  0743  0099               	movwf	25	;volatile
   552  0744                     l757:
   553                           
   554                           ;Lab10.c: 61:     TXSTAbits.BRGH = 0;
   555  0744  1118               	bcf	24,2	;volatile
   556  0745                     l759:
   557                           
   558                           ;Lab10.c: 62:     BAUDCTLbits.BRG16 = 0;
   559  0745  1683               	bsf	3,5	;RP0=1, select bank3
   560  0746  1703               	bsf	3,6	;RP1=1, select bank3
   561  0747  1187               	bcf	7,3	;volatile
   562  0748                     l761:
   563                           
   564                           ;Lab10.c: 64:     PIE1bits.RCIE = 0;
   565  0748  1683               	bsf	3,5	;RP0=1, select bank1
   566  0749  1303               	bcf	3,6	;RP1=0, select bank1
   567  074A  128C               	bcf	12,5	;volatile
   568  074B                     l763:
   569                           
   570                           ;Lab10.c: 65:     TXSTAbits.SYNC = 0;
   571  074B  1218               	bcf	24,4	;volatile
   572  074C                     l765:
   573                           
   574                           ;Lab10.c: 66:     TXSTAbits.TXEN = 1;
   575  074C  1698               	bsf	24,5	;volatile
   576  074D                     l767:
   577                           
   578                           ;Lab10.c: 67:     TXSTAbits.TX9 = 0;
   579  074D  1318               	bcf	24,6	;volatile
   580  074E                     l769:
   581                           
   582                           ;Lab10.c: 69:     RCSTAbits.SPEN = 1;
   583  074E  1283               	bcf	3,5	;RP0=0, select bank0
   584  074F  1303               	bcf	3,6	;RP1=0, select bank0
   585  0750  1798               	bsf	24,7	;volatile
   586  0751                     l771:
   587                           
   588                           ;Lab10.c: 70:     RCSTAbits.RX9 = 0;
   589  0751  1318               	bcf	24,6	;volatile
   590  0752                     l773:
   591                           
   592                           ;Lab10.c: 71:     RCSTAbits.CREN = 1;
   593  0752  1618               	bsf	24,4	;volatile
   594  0753                     l775:
   595                           
   596                           ;Lab10.c: 72:     PIR1bits.TXIF = 0;
   597  0753  120C               	bcf	12,4	;volatile
   598  0754                     l777:
   599                           
   600                           ;Lab10.c: 73:     PIR1bits.RCIF = 0;
   601  0754  128C               	bcf	12,5	;volatile
   602  0755                     l779:
   603                           
   604                           ;Lab10.c: 74:     INTCONbits.GIE = 1;
   605  0755  178B               	bsf	11,7	;volatile
   606  0756                     l781:
   607                           
   608                           ;Lab10.c: 79:         UART_write("Que accion desea ejecutar? \r \0");
   609  0756  3028               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   610  0757  120A  118A  270D  120A  118A  	fcall	_UART_write
   611  075C                     l783:
   612                           
   613                           ;Lab10.c: 80:         _delay((unsigned long)((50)*(8000000/4000.0)));
   614  075C  3082               	movlw	130
   615  075D  00F3               	movwf	??_main+1
   616  075E  30DD               	movlw	221
   617  075F  00F2               	movwf	??_main
   618  0760                     u177:
   619  0760  0BF2               	decfsz	??_main,f
   620  0761  2F60               	goto	u177
   621  0762  0BF3               	decfsz	??_main+1,f
   622  0763  2F60               	goto	u177
   623  0764  2F65               	nop2
   624  0765                     l785:
   625                           
   626                           ;Lab10.c: 81:         UART_write("[1] Desplegar Cadena de Caracteres \r \0");
   627  0765  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   628  0766  120A  118A  270D  120A  118A  	fcall	_UART_write
   629  076B                     l787:
   630                           
   631                           ;Lab10.c: 82:         _delay((unsigned long)((50)*(8000000/4000.0)));
   632  076B  3082               	movlw	130
   633  076C  00F3               	movwf	??_main+1
   634  076D  30DD               	movlw	221
   635  076E  00F2               	movwf	??_main
   636  076F                     u187:
   637  076F  0BF2               	decfsz	??_main,f
   638  0770  2F6F               	goto	u187
   639  0771  0BF3               	decfsz	??_main+1,f
   640  0772  2F6F               	goto	u187
   641  0773  2F74               	nop2
   642  0774                     l789:
   643                           
   644                           ;Lab10.c: 83:         UART_write("[2] Cambiar PORTA \r \0");
   645  0774  305D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   646  0775  120A  118A  270D  120A  118A  	fcall	_UART_write
   647  077A                     l791:
   648                           
   649                           ;Lab10.c: 84:         _delay((unsigned long)((50)*(8000000/4000.0)));
   650  077A  3082               	movlw	130
   651  077B  00F3               	movwf	??_main+1
   652  077C  30DD               	movlw	221
   653  077D  00F2               	movwf	??_main
   654  077E                     u197:
   655  077E  0BF2               	decfsz	??_main,f
   656  077F  2F7E               	goto	u197
   657  0780  0BF3               	decfsz	??_main+1,f
   658  0781  2F7E               	goto	u197
   659  0782  2F83               	nop2
   660  0783                     l793:
   661                           
   662                           ;Lab10.c: 85:         UART_write("[3] Cambiar PORTB \r \0");
   663  0783  3073               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   664  0784  120A  118A  270D  120A  118A  	fcall	_UART_write
   665  0789                     l795:
   666                           
   667                           ;Lab10.c: 86:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   668  0789  300B               	movlw	11
   669  078A  00F4               	movwf	??_main+2
   670  078B  3026               	movlw	38
   671  078C  00F3               	movwf	??_main+1
   672  078D  305D               	movlw	93
   673  078E  00F2               	movwf	??_main
   674  078F                     u207:
   675  078F  0BF2               	decfsz	??_main,f
   676  0790  2F8F               	goto	u207
   677  0791  0BF3               	decfsz	??_main+1,f
   678  0792  2F8F               	goto	u207
   679  0793  0BF4               	decfsz	??_main+2,f
   680  0794  2F8F               	goto	u207
   681  0795  2F96               	nop2
   682  0796                     l55:	
   683                           ;Lab10.c: 88:         while(!RCIF);
   684                           
   685  0796  1283               	bcf	3,5	;RP0=0, select bank0
   686  0797  1303               	bcf	3,6	;RP1=0, select bank0
   687  0798  1E8C               	btfss	12,5	;volatile
   688  0799  2F9B               	goto	u111
   689  079A  2F9C               	goto	u110
   690  079B                     u111:
   691  079B  2F96               	goto	l55
   692  079C                     u110:
   693  079C                     l797:
   694                           
   695                           ;Lab10.c: 89:         _delay((unsigned long)((50)*(8000000/4000.0)));
   696  079C  3082               	movlw	130
   697  079D  00F3               	movwf	??_main+1
   698  079E  30DD               	movlw	221
   699  079F  00F2               	movwf	??_main
   700  07A0                     u217:
   701  07A0  0BF2               	decfsz	??_main,f
   702  07A1  2FA0               	goto	u217
   703  07A2  0BF3               	decfsz	??_main+1,f
   704  07A3  2FA0               	goto	u217
   705  07A4  2FA5               	nop2
   706  07A5                     l799:
   707                           
   708                           ;Lab10.c: 91:         if (RCREG == '1'){
   709  07A5  3031               	movlw	49
   710  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   711  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   712  07A8  061A               	xorwf	26,w	;volatile
   713  07A9  1D03               	btfss	3,2
   714  07AA  2FAC               	goto	u121
   715  07AB  2FAD               	goto	u120
   716  07AC                     u121:
   717  07AC  2FB4               	goto	l803
   718  07AD                     u120:
   719  07AD                     l801:
   720                           
   721                           ;Lab10.c: 92:             UART_write("Buenas jovenes \r \0");
   722  07AD  3089               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   723  07AE  120A  118A  270D  120A  118A  	fcall	_UART_write
   724                           
   725                           ;Lab10.c: 93:         }
   726  07B3  2F56               	goto	l781
   727  07B4                     l803:
   728  07B4  3032               	movlw	50
   729  07B5  061A               	xorwf	26,w	;volatile
   730  07B6  1D03               	btfss	3,2
   731  07B7  2FB9               	goto	u131
   732  07B8  2FBA               	goto	u130
   733  07B9                     u131:
   734  07B9  2FC9               	goto	l809
   735  07BA                     u130:
   736  07BA                     l805:
   737                           
   738                           ;Lab10.c: 95:             UART_write("Ingrese el valor: \r \0");
   739  07BA  3047               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   740  07BB  120A  118A  270D  120A  118A  	fcall	_UART_write
   741  07C0                     l61:	
   742                           ;Lab10.c: 96:             while(!RCIF);
   743                           
   744  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   745  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   746  07C2  1E8C               	btfss	12,5	;volatile
   747  07C3  2FC5               	goto	u141
   748  07C4  2FC6               	goto	u140
   749  07C5                     u141:
   750  07C5  2FC0               	goto	l61
   751  07C6                     u140:
   752  07C6                     l807:
   753                           
   754                           ;Lab10.c: 97:             PORTA = RCREG;
   755  07C6  081A               	movf	26,w	;volatile
   756  07C7  0085               	movwf	5	;volatile
   757                           
   758                           ;Lab10.c: 98:                 }
   759  07C8  2F56               	goto	l781
   760  07C9                     l809:
   761  07C9  3033               	movlw	51
   762  07CA  061A               	xorwf	26,w	;volatile
   763  07CB  1D03               	btfss	3,2
   764  07CC  2FCE               	goto	u151
   765  07CD  2FCF               	goto	u150
   766  07CE                     u151:
   767  07CE  2FDE               	goto	l59
   768  07CF                     u150:
   769  07CF                     l811:
   770                           
   771                           ;Lab10.c: 101:             UART_write("Ingrese el valor: \r \0");
   772  07CF  3047               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   773  07D0  120A  118A  270D  120A  118A  	fcall	_UART_write
   774  07D5                     l66:	
   775                           ;Lab10.c: 102:             while(!RCIF);
   776                           
   777  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   778  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   779  07D7  1E8C               	btfss	12,5	;volatile
   780  07D8  2FDA               	goto	u161
   781  07D9  2FDB               	goto	u160
   782  07DA                     u161:
   783  07DA  2FD5               	goto	l66
   784  07DB                     u160:
   785  07DB                     l813:
   786                           
   787                           ;Lab10.c: 103:             PORTB = RCREG;
   788  07DB  081A               	movf	26,w	;volatile
   789  07DC  0086               	movwf	6	;volatile
   790  07DD  2F56               	goto	l781
   791  07DE                     l59:
   792  07DE  2F56               	goto	l781
   793  07DF  120A  118A  2800   	ljmp	start
   794  07E2                     __end_of_main:
   795                           
   796                           	psect	text1
   797  070D                     __ptext1:	
   798 ;; *************** function _UART_write *****************
   799 ;; Defined at:
   800 ;;		line 34 in file "Lab10.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;  word            1    wreg     PTR unsigned char 
   803 ;;		 -> STR_7(22), STR_6(22), STR_5(19), STR_4(22), 
   804 ;;		 -> STR_3(22), STR_2(39), STR_1(31), 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  word            1    1[COMMON] PTR unsigned char 
   807 ;;		 -> STR_7(22), STR_6(22), STR_5(19), STR_4(22), 
   808 ;;		 -> STR_3(22), STR_2(39), STR_1(31), 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0
   820 ;;      Temps:          1       0       0       0       0
   821 ;;      Totals:         2       0       0       0       0
   822 ;;Total ram usage:        2 bytes
   823 ;; Hardware stack levels used:    2
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _UART_write
   833  070D                     _UART_write:
   834                           
   835                           ;incstack = 0
   836                           ; Regs used in _UART_write: [wreg-fsr0h+status,2+status,0+pclath]
   837                           ;UART_write@word stored from wreg
   838  070D  00F1               	movwf	UART_write@word
   839  070E                     l739:
   840                           
   841                           ;Lab10.c: 35:     while (*word != 0){
   842  070E  2F23               	goto	l745
   843  070F                     l741:
   844                           
   845                           ;Lab10.c: 36:         TXREG = (*word);
   846  070F  0871               	movf	UART_write@word,w
   847  0710  0084               	movwf	4
   848  0711  120A  118A  2003  120A  118A  	fcall	stringdir
   849  0716  1283               	bcf	3,5	;RP0=0, select bank0
   850  0717  1303               	bcf	3,6	;RP1=0, select bank0
   851  0718  0099               	movwf	25	;volatile
   852  0719                     l45:	
   853                           ;Lab10.c: 37:         while(!TXSTAbits.TRMT);
   854                           
   855  0719  1683               	bsf	3,5	;RP0=1, select bank1
   856  071A  1303               	bcf	3,6	;RP1=0, select bank1
   857  071B  1C98               	btfss	24,1	;volatile
   858  071C  2F1E               	goto	u91
   859  071D  2F1F               	goto	u90
   860  071E                     u91:
   861  071E  2F19               	goto	l45
   862  071F                     u90:
   863  071F                     l743:
   864                           
   865                           ;Lab10.c: 38:         word++;
   866  071F  3001               	movlw	1
   867  0720  00F0               	movwf	??_UART_write
   868  0721  0870               	movf	??_UART_write,w
   869  0722  07F1               	addwf	UART_write@word,f
   870  0723                     l745:
   871                           
   872                           ;Lab10.c: 35:     while (*word != 0){
   873  0723  0871               	movf	UART_write@word,w
   874  0724  0084               	movwf	4
   875  0725  120A  118A  2003  120A  118A  	fcall	stringdir
   876  072A  3A00               	xorlw	0
   877  072B  1D03               	skipz
   878  072C  2F2E               	goto	u101
   879  072D  2F2F               	goto	u100
   880  072E                     u101:
   881  072E  2F0F               	goto	l741
   882  072F                     u100:
   883  072F                     l49:
   884  072F  0008               	return
   885  0730                     __end_of_UART_write:
   886  007E                     btemp	set	126	;btemp
   887  007E                     wtemp0	set	126
   888                           
   889                           	psect	config
   890                           
   891                           ;Config register CONFIG1 @ 0x2007
   892                           ;	Oscillator Selection bits
   893                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   894                           ;	Watchdog Timer Enable bit
   895                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   896                           ;	Power-up Timer Enable bit
   897                           ;	PWRTE = ON, PWRT enabled
   898                           ;	RE3/MCLR pin function select bit
   899                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   900                           ;	Code Protection bit
   901                           ;	CP = OFF, Program memory code protection is disabled
   902                           ;	Data Code Protection bit
   903                           ;	CPD = OFF, Data memory code protection is disabled
   904                           ;	Brown Out Reset Selection bits
   905                           ;	BOREN = OFF, BOR disabled
   906                           ;	Internal External Switchover bit
   907                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   908                           ;	Fail-Safe Clock Monitor Enabled bit
   909                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   910                           ;	Low Voltage Programming Enable bit
   911                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   912                           ;	In-Circuit Debugger Mode bit
   913                           ;	DEBUG = 0x1, unprogrammed default
   914  2007                     	org	8199
   915  2007  30C4               	dw	12484
   916                           
   917                           ;Config register CONFIG2 @ 0x2008
   918                           ;	Brown-out Reset Selection bit
   919                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   920                           ;	Flash Program Memory Self Write Enable bits
   921                           ;	WRT = OFF, Write protection off
   922  2008                     	org	8200
   923  2008  3FFF               	dw	16383

Data Sizes:
    Strings     155
    Constant    0
    Data        4
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_write@word	PTR unsigned char  size(1) Largest target is 39
		 -> STR_7(CODE[22]), STR_6(CODE[22]), STR_5(CODE[19]), STR_4(CODE[22]), 
		 -> STR_3(CODE[22]), STR_2(CODE[39]), STR_1(CODE[31]), 


Critical Paths under _main in COMMON

    _main->_UART_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     276
                                              2 COMMON     3     3      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           2     2      0     276
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat May 08 01:02:24 2021

                      pc 0002                       l45 0719                       l61 07C0  
                     l55 0796                       l49 072F                       l66 07D5  
                     l59 07DE                       u90 071F                       u91 071E  
                     _op 0079                       fsr 0004                      l801 07AD  
                    l811 07CF                      l803 07B4                      l741 070F  
                    l813 07DB                      l805 07BA                      l743 071F  
                    l807 07C6                      l751 0740                      l745 0723  
                    l809 07C9                      l761 0748                      l753 0741  
                    l739 070E                      l771 0751                      l763 074B  
                    l755 0742                      l747 0730                      l781 0756  
                    l773 0752                      l765 074C                      l757 0744  
                    l749 073C                      l791 077A                      l783 075C  
                    l775 0753                      l767 074D                      l759 0745  
                    l793 0783                      l785 0765                      l777 0754  
                    l769 074E                      l795 0789                      l787 076B  
                    l779 0755                      l797 079C                      l789 0774  
                    l799 07A5                      u100 072F                      u101 072E  
                    u110 079C                      u111 079B                      u120 07AD  
                    u121 07AC                      u130 07BA                      u131 07B9  
                    u140 07C6                      u141 07C5                      u150 07CF  
                    u151 07CE                      u207 078F                      u160 07DB  
                    u161 07DA                      u217 07A0                      u177 0760  
                    u187 076F                      u197 077E                      fsr0 0004  
                   STR_1 0030                     STR_2 0009                     STR_3 0065  
                   STR_4 007B                     STR_5 0091                     STR_6 004F  
                   STR_7 004F                     _RCIF 0065                     _main 0730  
                   btemp 007E                     _word 0075                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TXREG 0019  
            ?_UART_write 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07E2             __end_of_main 07E2  
                 ??_main 0072                   _ANSELH 0189                   _OSCCON 008F  
    __size_of_UART_write 0023             __pdataCOMMON 0075  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0730             ??_UART_write 0070  
             __stringtab 0003       __end_of_UART_write 0730                  __ptext1 070D  
   end_of_initialization 07FC                _RCSTAbits 0018                _TXSTAbits 0098  
          __pidataCOMMON 0709              _BAUDCTLbits 0187      start_initialization 07E2  
            __pbssCOMMON 0079                ___latbits 0002                __pstrings 0003  
               _PIE1bits 008C                 _PIR1bits 000C              __stringbase 0008  
         UART_write@word 0071       __end_of__stringtab 0009            __size_of_main 00B2  
             _INTCONbits 000B                stringcode 0003                 stringdir 0003  
               stringtab 0003               _UART_write 070D  
