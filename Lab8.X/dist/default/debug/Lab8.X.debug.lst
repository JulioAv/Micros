

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 10:38:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  0244                     __pidataBANK0:
   215                           
   216                           ;initializer for _display
   217  0244  343F               	retlw	63
   218  0245  3406               	retlw	6
   219  0246  345B               	retlw	91
   220  0247  344F               	retlw	79
   221  0248  3466               	retlw	102
   222  0249  346D               	retlw	109
   223  024A  347D               	retlw	125
   224  024B  3447               	retlw	71
   225  024C  347F               	retlw	127
   226  024D  3467               	retlw	103
   227                           
   228                           	psect	nvCOMMON
   229  007A                     __pnvCOMMON:
   230  007A                     _val1:
   231  007A                     	ds	1
   232                           
   233                           	psect	nvBANK0
   234  0038                     __pnvBANK0:
   235  0038                     _uni:
   236  0038                     	ds	1
   237  0039                     _cen:
   238  0039                     	ds	1
   239  003A                     _dec:
   240  003A                     	ds	1
   241  001E                     _ADRESH	set	30
   242  001F                     _ADCON0bits	set	31
   243  0006                     _PORTB	set	6
   244  0001                     _TMR0	set	1
   245  000B                     _INTCONbits	set	11
   246  0007                     _PORTCbits	set	7
   247  0007                     _PORTC	set	7
   248  0008                     _PORTD	set	8
   249  005A                     _T0IF	set	90
   250  009F                     _ADCON1bits	set	159
   251  0081                     _OPTION_REG	set	129
   252  008F                     _OSCCON	set	143
   253  0088                     _TRISD	set	136
   254  0087                     _TRISC	set	135
   255  0086                     _TRISB	set	134
   256  0085                     _TRISA	set	133
   257  0189                     _ANSELH	set	393
   258  0188                     _ANSEL	set	392
   259                           
   260                           	psect	cinit
   261  0011                     start_initialization:	
   262                           ; #config settings
   263                           
   264  0011                     __initialization:
   265                           
   266                           ; Initialize objects allocated to BANK0
   267  0011  1383               	bcf	3,7	;select IRP bank0
   268  0012  3038               	movlw	low (__pdataBANK0+10)
   269  0013  00FD               	movwf	btemp+-1
   270  0014  3002               	movlw	high __pidataBANK0
   271  0015  00FE               	movwf	btemp
   272  0016  3044               	movlw	low __pidataBANK0
   273  0017  00FF               	movwf	btemp+1
   274  0018  302E               	movlw	low __pdataBANK0
   275  0019  0084               	movwf	4
   276  001A  120A  118A  2235  120A  118A  	fcall	init_ram0
   277                           
   278                           ; Clear objects allocated to COMMON
   279  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   280  0020  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   281  0021  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   282  0022                     end_of_initialization:	
   283                           ;End of C runtime variable initialization code
   284                           
   285  0022                     __end_of__initialization:
   286  0022  0183               	clrf	3
   287  0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMMON
   290  0077                     __pbssCOMMON:
   291  0077                     _disp:
   292  0077                     	ds	2
   293  0079                     _cont:
   294  0079                     	ds	1
   295                           
   296                           	psect	dataBANK0
   297  002E                     __pdataBANK0:
   298  002E                     _display:
   299  002E                     	ds	10
   300                           
   301                           	psect	inittext
   302  0231                     init_fetch0:	
   303                           ;	Called with low address in FSR and high address in W
   304                           
   305  0231  087E               	movf	btemp,w
   306  0232  008A               	movwf	10
   307  0233  087F               	movf	btemp+1,w
   308  0234  0082               	movwf	2
   309  0235                     init_ram0:	
   310                           ;Called with:
   311                           ;	high address of idata address in btemp 
   312                           ;	low address of idata address in btemp+1 
   313                           ;	low address of data in FSR
   314                           ;	high address + 1 of data in btemp-1
   315                           
   316  0235  120A  118A  2231  120A  118A  	fcall	init_fetch0
   317  023A  0080               	movwf	0
   318  023B  0A84               	incf	4,f
   319  023C  0804               	movf	4,w
   320  023D  067D               	xorwf	btemp+-1,w
   321  023E  1903               	btfsc	3,2
   322  023F  3400               	retlw	0
   323  0240  0AFF               	incf	btemp+1,f
   324  0241  1903               	btfsc	3,2
   325  0242  0AFE               	incf	btemp,f
   326  0243  2A35               	goto	init_ram0
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:
   330  0070                     ?_isr:
   331  0070                     ??_isr:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337                           
   338                           ; 1 bytes @ 0x0
   339  0070                     	ds	3
   340  0073                     ?___wmul:
   341  0073                     ?___awmod:	
   342                           ; 2 bytes @ 0x3
   343                           
   344  0073                     ___wmul@multiplier:	
   345                           ; 2 bytes @ 0x3
   346                           
   347  0073                     ___awmod@divisor:	
   348                           ; 2 bytes @ 0x3
   349                           
   350                           
   351                           ; 2 bytes @ 0x3
   352  0073                     	ds	2
   353  0075                     ___wmul@multiplicand:
   354  0075                     ___awmod@dividend:	
   355                           ; 2 bytes @ 0x5
   356                           
   357                           
   358                           ; 2 bytes @ 0x5
   359  0075                     	ds	2
   360  0077                     ??___wmul:
   361                           
   362                           	psect	cstackBANK0
   363  0020                     __pcstackBANK0:	
   364                           ; 1 bytes @ 0x7
   365                           
   366  0020                     ??___awmod:
   367  0020                     ___wmul@product:	
   368                           ; 1 bytes @ 0x0
   369                           
   370                           
   371                           ; 2 bytes @ 0x0
   372  0020                     	ds	1
   373  0021                     ___awmod@counter:
   374                           
   375                           ; 1 bytes @ 0x1
   376  0021                     	ds	1
   377  0022                     ?___awdiv:
   378  0022                     ___awmod@sign:	
   379                           ; 2 bytes @ 0x2
   380                           
   381  0022                     ___awdiv@divisor:	
   382                           ; 1 bytes @ 0x2
   383                           
   384                           
   385                           ; 2 bytes @ 0x2
   386  0022                     	ds	2
   387  0024                     ___awdiv@dividend:
   388                           
   389                           ; 2 bytes @ 0x4
   390  0024                     	ds	2
   391  0026                     ??___awdiv:
   392                           
   393                           ; 1 bytes @ 0x6
   394  0026                     	ds	1
   395  0027                     ___awdiv@counter:
   396                           
   397                           ; 1 bytes @ 0x7
   398  0027                     	ds	1
   399  0028                     ___awdiv@sign:
   400                           
   401                           ; 1 bytes @ 0x8
   402  0028                     	ds	1
   403  0029                     ___awdiv@quotient:
   404                           
   405                           ; 2 bytes @ 0x9
   406  0029                     	ds	2
   407  002B                     ??_main:
   408                           
   409                           ; 1 bytes @ 0xB
   410  002B                     	ds	3
   411                           
   412                           	psect	maintext
   413  0026                     __pmaintext:	
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 70 in file "Lab8.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          0       3       0       0       0
   436 ;;      Totals:         0       3       0       0       0
   437 ;;Total ram usage:        3 bytes
   438 ;; Hardware stack levels required when called:    2
   439 ;; This function calls:
   440 ;;		___awdiv
   441 ;;		___awmod
   442 ;;		___wmul
   443 ;; This function is called by:
   444 ;;		Startup code after reset
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _main
   450  0026                     _main:
   451  0026                     l1202:	
   452                           ;incstack = 0
   453                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   454                           
   455                           
   456                           ;Lab8.c: 71:     ANSEL = 0x03;
   457  0026  3003               	movlw	3
   458  0027  1683               	bsf	3,5	;RP0=1, select bank3
   459  0028  1703               	bsf	3,6	;RP1=1, select bank3
   460  0029  0088               	movwf	8	;volatile
   461  002A                     l1204:
   462                           
   463                           ;Lab8.c: 72:     ANSELH = 0x00;
   464  002A  0189               	clrf	9	;volatile
   465  002B                     l1206:
   466                           
   467                           ;Lab8.c: 74:     TRISA = 0x03;
   468  002B  3003               	movlw	3
   469  002C  1683               	bsf	3,5	;RP0=1, select bank1
   470  002D  1303               	bcf	3,6	;RP1=0, select bank1
   471  002E  0085               	movwf	5	;volatile
   472                           
   473                           ;Lab8.c: 75:     TRISB = 0x00;
   474  002F  0186               	clrf	6	;volatile
   475                           
   476                           ;Lab8.c: 76:     TRISC = 0x00;
   477  0030  0187               	clrf	7	;volatile
   478                           
   479                           ;Lab8.c: 77:     TRISD = 0x00;
   480  0031  0188               	clrf	8	;volatile
   481  0032                     l1208:
   482                           
   483                           ;Lab8.c: 79:     OSCCON = 0B1000111;
   484  0032  3047               	movlw	71
   485  0033  008F               	movwf	15	;volatile
   486  0034                     l1210:
   487                           
   488                           ;Lab8.c: 80:     OPTION_REG = 0B01000011;
   489  0034  3043               	movlw	67
   490  0035  0081               	movwf	1	;volatile
   491  0036                     l1212:
   492                           
   493                           ;Lab8.c: 81:     TMR0 = 178;
   494  0036  30B2               	movlw	178
   495  0037  1283               	bcf	3,5	;RP0=0, select bank0
   496  0038  1303               	bcf	3,6	;RP1=0, select bank0
   497  0039  0081               	movwf	1	;volatile
   498  003A                     l1214:
   499                           
   500                           ;Lab8.c: 83:     PORTB = 0x00;
   501  003A  0186               	clrf	6	;volatile
   502  003B                     l1216:
   503                           
   504                           ;Lab8.c: 84:     PORTC = 0x00;
   505  003B  0187               	clrf	7	;volatile
   506  003C                     l1218:
   507                           
   508                           ;Lab8.c: 85:     PORTD = 0x00;
   509  003C  0188               	clrf	8	;volatile
   510  003D                     l1220:
   511                           
   512                           ;Lab8.c: 87:     ADCON0bits.ADCS0 = 0;
   513  003D  131F               	bcf	31,6	;volatile
   514  003E                     l1222:
   515                           
   516                           ;Lab8.c: 88:     ADCON0bits.ADCS1 = 0;
   517  003E  139F               	bcf	31,7	;volatile
   518  003F                     l1224:
   519                           
   520                           ;Lab8.c: 89:     ADCON0bits.GO_DONE = 0;
   521  003F  109F               	bcf	31,1	;volatile
   522  0040                     l1226:
   523                           
   524                           ;Lab8.c: 90:     ADCON0bits.CHS = 0;
   525  0040  30C3               	movlw	-61
   526  0041  059F               	andwf	31,f	;volatile
   527  0042                     l1228:
   528                           
   529                           ;Lab8.c: 91:     ADCON0bits.ADON = 1;
   530  0042  141F               	bsf	31,0	;volatile
   531  0043                     l1230:
   532                           
   533                           ;Lab8.c: 93:     ADCON1bits.ADFM = 0;
   534  0043  1683               	bsf	3,5	;RP0=1, select bank1
   535  0044  1303               	bcf	3,6	;RP1=0, select bank1
   536  0045  139F               	bcf	31,7	;volatile
   537  0046                     l1232:
   538                           
   539                           ;Lab8.c: 94:     ADCON1bits.VCFG0 = 0;
   540  0046  121F               	bcf	31,4	;volatile
   541  0047                     l1234:
   542                           
   543                           ;Lab8.c: 95:     ADCON1bits.VCFG1 = 0;
   544  0047  129F               	bcf	31,5	;volatile
   545  0048                     l1236:
   546                           
   547                           ;Lab8.c: 97:     INTCONbits.GIE = 1;
   548  0048  178B               	bsf	11,7	;volatile
   549  0049                     l1238:
   550                           
   551                           ;Lab8.c: 98:     INTCONbits.T0IE = 1;
   552  0049  168B               	bsf	11,5	;volatile
   553  004A                     l1240:
   554                           
   555                           ;Lab8.c: 101:     ADCON0bits.GO = 1;
   556  004A  1283               	bcf	3,5	;RP0=0, select bank0
   557  004B  1303               	bcf	3,6	;RP1=0, select bank0
   558  004C  149F               	bsf	31,1	;volatile
   559  004D                     l1242:
   560                           
   561                           ;Lab8.c: 105:         cen = cont/100;
   562  004D  3064               	movlw	100
   563  004E  00A2               	movwf	___awdiv@divisor
   564  004F  3000               	movlw	0
   565  0050  00A3               	movwf	___awdiv@divisor+1
   566  0051  0879               	movf	_cont,w
   567  0052  00AB               	movwf	??_main
   568  0053  01AC               	clrf	??_main+1
   569  0054  082B               	movf	??_main,w
   570  0055  00A4               	movwf	___awdiv@dividend
   571  0056  082C               	movf	??_main+1,w
   572  0057  00A5               	movwf	___awdiv@dividend+1
   573  0058  120A  118A  20ED  120A  118A  	fcall	___awdiv
   574  005D  1283               	bcf	3,5	;RP0=0, select bank0
   575  005E  1303               	bcf	3,6	;RP1=0, select bank0
   576  005F  0822               	movf	?___awdiv,w
   577  0060  00AD               	movwf	??_main+2
   578  0061  082D               	movf	??_main+2,w
   579  0062  00B9               	movwf	_cen
   580  0063                     l1244:
   581                           
   582                           ;Lab8.c: 106:         val1 = cont%100;
   583  0063  3064               	movlw	100
   584  0064  00F3               	movwf	___awmod@divisor
   585  0065  3000               	movlw	0
   586  0066  00F4               	movwf	___awmod@divisor+1
   587  0067  0879               	movf	_cont,w
   588  0068  00AB               	movwf	??_main
   589  0069  01AC               	clrf	??_main+1
   590  006A  082B               	movf	??_main,w
   591  006B  00F5               	movwf	___awmod@dividend
   592  006C  082C               	movf	??_main+1,w
   593  006D  00F6               	movwf	___awmod@dividend+1
   594  006E  120A  118A  2156  120A  118A  	fcall	___awmod
   595  0073  0873               	movf	?___awmod,w
   596  0074  1283               	bcf	3,5	;RP0=0, select bank0
   597  0075  1303               	bcf	3,6	;RP1=0, select bank0
   598  0076  00AD               	movwf	??_main+2
   599  0077  082D               	movf	??_main+2,w
   600  0078  00FA               	movwf	_val1
   601  0079                     l1246:
   602                           
   603                           ;Lab8.c: 107:         dec = val1/10;
   604  0079  300A               	movlw	10
   605  007A  00A2               	movwf	___awdiv@divisor
   606  007B  3000               	movlw	0
   607  007C  00A3               	movwf	___awdiv@divisor+1
   608  007D  087A               	movf	_val1,w
   609  007E  00AB               	movwf	??_main
   610  007F  01AC               	clrf	??_main+1
   611  0080  082B               	movf	??_main,w
   612  0081  00A4               	movwf	___awdiv@dividend
   613  0082  082C               	movf	??_main+1,w
   614  0083  00A5               	movwf	___awdiv@dividend+1
   615  0084  120A  118A  20ED  120A  118A  	fcall	___awdiv
   616  0089  1283               	bcf	3,5	;RP0=0, select bank0
   617  008A  1303               	bcf	3,6	;RP1=0, select bank0
   618  008B  0822               	movf	?___awdiv,w
   619  008C  00AD               	movwf	??_main+2
   620  008D  082D               	movf	??_main+2,w
   621  008E  00BA               	movwf	_dec
   622  008F                     l1248:
   623                           
   624                           ;Lab8.c: 108:         uni = val1%10;
   625  008F  300A               	movlw	10
   626  0090  00F3               	movwf	___awmod@divisor
   627  0091  3000               	movlw	0
   628  0092  00F4               	movwf	___awmod@divisor+1
   629  0093  087A               	movf	_val1,w
   630  0094  00AB               	movwf	??_main
   631  0095  01AC               	clrf	??_main+1
   632  0096  082B               	movf	??_main,w
   633  0097  00F5               	movwf	___awmod@dividend
   634  0098  082C               	movf	??_main+1,w
   635  0099  00F6               	movwf	___awmod@dividend+1
   636  009A  120A  118A  2156  120A  118A  	fcall	___awmod
   637  009F  0873               	movf	?___awmod,w
   638  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   639  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   640  00A2  00AD               	movwf	??_main+2
   641  00A3  082D               	movf	??_main+2,w
   642  00A4  00B8               	movwf	_uni
   643  00A5                     l1250:
   644                           
   645                           ;Lab8.c: 110:         if (ADCON0bits.GO == 0){
   646  00A5  189F               	btfsc	31,1	;volatile
   647  00A6  28A8               	goto	u761
   648  00A7  28A9               	goto	u760
   649  00A8                     u761:
   650  00A8  284D               	goto	l1242
   651  00A9                     u760:
   652  00A9                     l1252:
   653                           
   654                           ;Lab8.c: 111:             if (ADCON0bits.CHS == 0){
   655  00A9  0C1F               	rrf	31,w	;volatile
   656  00AA  00AB               	movwf	??_main
   657  00AB  0C2B               	rrf	??_main,w
   658  00AC  390F               	andlw	15
   659  00AD  3A00               	xorlw	0
   660  00AE  1D03               	skipz
   661  00AF  28B1               	goto	u771
   662  00B0  28B2               	goto	u770
   663  00B1                     u771:
   664  00B1  28B9               	goto	l1258
   665  00B2                     u770:
   666  00B2                     l1254:
   667                           
   668                           ;Lab8.c: 112:                 PORTB = ADRESH;
   669  00B2  081E               	movf	30,w	;volatile
   670  00B3  0086               	movwf	6	;volatile
   671  00B4                     l1256:
   672                           
   673                           ;Lab8.c: 113:                 ADCON0bits.CHS = 1;
   674  00B4  081F               	movf	31,w	;volatile
   675  00B5  39C3               	andlw	-61
   676  00B6  3804               	iorlw	4
   677  00B7  009F               	movwf	31	;volatile
   678                           
   679                           ;Lab8.c: 114:             }
   680  00B8  28E0               	goto	l1262
   681  00B9                     l1258:
   682                           
   683                           ;Lab8.c: 116:                 cont = (ADRESH*500)/255;
   684  00B9  30FF               	movlw	255
   685  00BA  00A2               	movwf	___awdiv@divisor
   686  00BB  3000               	movlw	0
   687  00BC  00A3               	movwf	___awdiv@divisor+1
   688  00BD  081E               	movf	30,w	;volatile
   689  00BE  00AB               	movwf	??_main
   690  00BF  01AC               	clrf	??_main+1
   691  00C0  082B               	movf	??_main,w
   692  00C1  00F3               	movwf	___wmul@multiplier
   693  00C2  082C               	movf	??_main+1,w
   694  00C3  00F4               	movwf	___wmul@multiplier+1
   695  00C4  30F4               	movlw	244
   696  00C5  00F5               	movwf	___wmul@multiplicand
   697  00C6  3001               	movlw	1
   698  00C7  00F6               	movwf	___wmul@multiplicand+1
   699  00C8  120A  118A  2206  120A  118A  	fcall	___wmul
   700  00CD  0874               	movf	?___wmul+1,w
   701  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   702  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   703  00D0  00A5               	movwf	___awdiv@dividend+1
   704  00D1  0873               	movf	?___wmul,w
   705  00D2  00A4               	movwf	___awdiv@dividend
   706  00D3  120A  118A  20ED  120A  118A  	fcall	___awdiv
   707  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   708  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   709  00DA  0822               	movf	?___awdiv,w
   710  00DB  00AD               	movwf	??_main+2
   711  00DC  082D               	movf	??_main+2,w
   712  00DD  00F9               	movwf	_cont
   713  00DE                     l1260:
   714                           
   715                           ;Lab8.c: 117:                 ADCON0bits.CHS = 0;
   716  00DE  30C3               	movlw	-61
   717  00DF  059F               	andwf	31,f	;volatile
   718  00E0                     l1262:
   719                           
   720                           ;Lab8.c: 119:             _delay((unsigned long)((50)*(1000000/4000000.0)));
   721  00E0  3003               	movlw	3
   722  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   723  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   724  00E3  00AB               	movwf	??_main
   725  00E4                     u787:
   726  00E4  0BAB               	decfsz	??_main,f
   727  00E5  28E4               	goto	u787
   728  00E6                     l1264:
   729                           
   730                           ;Lab8.c: 120:             ADCON0bits.GO = 1;
   731  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   732  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   733  00E8  149F               	bsf	31,1	;volatile
   734  00E9  284D               	goto	l1242
   735  00EA  120A  118A  280E   	ljmp	start
   736  00ED                     __end_of_main:
   737                           
   738                           	psect	text1
   739  0206                     __ptext1:	
   740 ;; *************** function ___wmul *****************
   741 ;; Defined at:
   742 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  multiplier      2    3[COMMON] unsigned int 
   745 ;;  multiplicand    2    5[COMMON] unsigned int 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  product         2    0[BANK0 ] unsigned int 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  2    3[COMMON] unsigned int 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         4       0       0       0       0
   758 ;;      Locals:         0       2       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         4       2       0       0       0
   761 ;;Total ram usage:        6 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function ___wmul
   773  0206                     ___wmul:
   774  0206                     l1106:	
   775                           ;incstack = 0
   776                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   777                           
   778  0206  1283               	bcf	3,5	;RP0=0, select bank0
   779  0207  1303               	bcf	3,6	;RP1=0, select bank0
   780  0208  01A0               	clrf	___wmul@product
   781  0209  01A1               	clrf	___wmul@product+1
   782  020A                     l1108:
   783  020A  1C73               	btfss	___wmul@multiplier,0
   784  020B  2A0D               	goto	u531
   785  020C  2A0E               	goto	u530
   786  020D                     u531:
   787  020D  2A16               	goto	l160
   788  020E                     u530:
   789  020E                     l1110:
   790  020E  0875               	movf	___wmul@multiplicand,w
   791  020F  1283               	bcf	3,5	;RP0=0, select bank0
   792  0210  1303               	bcf	3,6	;RP1=0, select bank0
   793  0211  07A0               	addwf	___wmul@product,f
   794  0212  1803               	skipnc
   795  0213  0AA1               	incf	___wmul@product+1,f
   796  0214  0876               	movf	___wmul@multiplicand+1,w
   797  0215  07A1               	addwf	___wmul@product+1,f
   798  0216                     l160:
   799  0216  3001               	movlw	1
   800  0217                     u545:
   801  0217  1003               	clrc
   802  0218  0DF5               	rlf	___wmul@multiplicand,f
   803  0219  0DF6               	rlf	___wmul@multiplicand+1,f
   804  021A  3EFF               	addlw	-1
   805  021B  1D03               	skipz
   806  021C  2A17               	goto	u545
   807  021D                     l1112:
   808  021D  3001               	movlw	1
   809  021E                     u555:
   810  021E  1003               	clrc
   811  021F  0CF4               	rrf	___wmul@multiplier+1,f
   812  0220  0CF3               	rrf	___wmul@multiplier,f
   813  0221  3EFF               	addlw	-1
   814  0222  1D03               	skipz
   815  0223  2A1E               	goto	u555
   816  0224                     l1114:
   817  0224  0873               	movf	___wmul@multiplier,w
   818  0225  0474               	iorwf	___wmul@multiplier+1,w
   819  0226  1D03               	btfss	3,2
   820  0227  2A29               	goto	u561
   821  0228  2A2A               	goto	u560
   822  0229                     u561:
   823  0229  2A0A               	goto	l1108
   824  022A                     u560:
   825  022A                     l1116:
   826  022A  1283               	bcf	3,5	;RP0=0, select bank0
   827  022B  1303               	bcf	3,6	;RP1=0, select bank0
   828  022C  0821               	movf	___wmul@product+1,w
   829  022D  00F4               	movwf	?___wmul+1
   830  022E  0820               	movf	___wmul@product,w
   831  022F  00F3               	movwf	?___wmul
   832  0230                     l162:
   833  0230  0008               	return
   834  0231                     __end_of___wmul:
   835                           
   836                           	psect	text2
   837  0156                     __ptext2:	
   838 ;; *************** function ___awmod *****************
   839 ;; Defined at:
   840 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  divisor         2    3[COMMON] int 
   843 ;;  dividend        2    5[COMMON] int 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  sign            1    2[BANK0 ] unsigned char 
   846 ;;  counter         1    1[BANK0 ] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  2    3[COMMON] int 
   849 ;; Registers used:
   850 ;;		wreg, status,2, status,0
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   856 ;;      Params:         4       0       0       0       0
   857 ;;      Locals:         0       2       0       0       0
   858 ;;      Temps:          0       1       0       0       0
   859 ;;      Totals:         4       3       0       0       0
   860 ;;Total ram usage:        7 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    1
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function ___awmod
   872  0156                     ___awmod:
   873  0156                     l1164:	
   874                           ;incstack = 0
   875                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   876                           
   877  0156  1283               	bcf	3,5	;RP0=0, select bank0
   878  0157  1303               	bcf	3,6	;RP1=0, select bank0
   879  0158  01A2               	clrf	___awmod@sign
   880  0159                     l1166:
   881  0159  1FF6               	btfss	___awmod@dividend+1,7
   882  015A  295C               	goto	u671
   883  015B  295D               	goto	u670
   884  015C                     u671:
   885  015C  2964               	goto	l1172
   886  015D                     u670:
   887  015D                     l1168:
   888  015D  09F5               	comf	___awmod@dividend,f
   889  015E  09F6               	comf	___awmod@dividend+1,f
   890  015F  0AF5               	incf	___awmod@dividend,f
   891  0160  1903               	skipnz
   892  0161  0AF6               	incf	___awmod@dividend+1,f
   893  0162                     l1170:
   894  0162  01A2               	clrf	___awmod@sign
   895  0163  0AA2               	incf	___awmod@sign,f
   896  0164                     l1172:
   897  0164  1FF4               	btfss	___awmod@divisor+1,7
   898  0165  2967               	goto	u681
   899  0166  2968               	goto	u680
   900  0167                     u681:
   901  0167  296D               	goto	l1176
   902  0168                     u680:
   903  0168                     l1174:
   904  0168  09F3               	comf	___awmod@divisor,f
   905  0169  09F4               	comf	___awmod@divisor+1,f
   906  016A  0AF3               	incf	___awmod@divisor,f
   907  016B  1903               	skipnz
   908  016C  0AF4               	incf	___awmod@divisor+1,f
   909  016D                     l1176:
   910  016D  0873               	movf	___awmod@divisor,w
   911  016E  0474               	iorwf	___awmod@divisor+1,w
   912  016F  1903               	btfsc	3,2
   913  0170  2972               	goto	u691
   914  0171  2973               	goto	u690
   915  0172                     u691:
   916  0172  29A2               	goto	l1194
   917  0173                     u690:
   918  0173                     l1178:
   919  0173  01A1               	clrf	___awmod@counter
   920  0174  0AA1               	incf	___awmod@counter,f
   921  0175  2981               	goto	l1184
   922  0176                     l1180:
   923  0176  3001               	movlw	1
   924  0177                     u705:
   925  0177  1003               	clrc
   926  0178  0DF3               	rlf	___awmod@divisor,f
   927  0179  0DF4               	rlf	___awmod@divisor+1,f
   928  017A  3EFF               	addlw	-1
   929  017B  1D03               	skipz
   930  017C  2977               	goto	u705
   931  017D                     l1182:
   932  017D  3001               	movlw	1
   933  017E  00A0               	movwf	??___awmod
   934  017F  0820               	movf	??___awmod,w
   935  0180  07A1               	addwf	___awmod@counter,f
   936  0181                     l1184:
   937  0181  1FF4               	btfss	___awmod@divisor+1,7
   938  0182  2984               	goto	u711
   939  0183  2985               	goto	u710
   940  0184                     u711:
   941  0184  2976               	goto	l1180
   942  0185                     u710:
   943  0185                     l1186:
   944  0185  0874               	movf	___awmod@divisor+1,w
   945  0186  0276               	subwf	___awmod@dividend+1,w
   946  0187  1D03               	skipz
   947  0188  298B               	goto	u725
   948  0189  0873               	movf	___awmod@divisor,w
   949  018A  0275               	subwf	___awmod@dividend,w
   950  018B                     u725:
   951  018B  1C03               	skipc
   952  018C  298E               	goto	u721
   953  018D  298F               	goto	u720
   954  018E                     u721:
   955  018E  2995               	goto	l1190
   956  018F                     u720:
   957  018F                     l1188:
   958  018F  0873               	movf	___awmod@divisor,w
   959  0190  02F5               	subwf	___awmod@dividend,f
   960  0191  0874               	movf	___awmod@divisor+1,w
   961  0192  1C03               	skipc
   962  0193  03F6               	decf	___awmod@dividend+1,f
   963  0194  02F6               	subwf	___awmod@dividend+1,f
   964  0195                     l1190:
   965  0195  3001               	movlw	1
   966  0196                     u735:
   967  0196  1003               	clrc
   968  0197  0CF4               	rrf	___awmod@divisor+1,f
   969  0198  0CF3               	rrf	___awmod@divisor,f
   970  0199  3EFF               	addlw	-1
   971  019A  1D03               	skipz
   972  019B  2996               	goto	u735
   973  019C                     l1192:
   974  019C  3001               	movlw	1
   975  019D  02A1               	subwf	___awmod@counter,f
   976  019E  1D03               	btfss	3,2
   977  019F  29A1               	goto	u741
   978  01A0  29A2               	goto	u740
   979  01A1                     u741:
   980  01A1  2985               	goto	l1186
   981  01A2                     u740:
   982  01A2                     l1194:
   983  01A2  0822               	movf	___awmod@sign,w
   984  01A3  1903               	btfsc	3,2
   985  01A4  29A6               	goto	u751
   986  01A5  29A7               	goto	u750
   987  01A6                     u751:
   988  01A6  29AC               	goto	l1198
   989  01A7                     u750:
   990  01A7                     l1196:
   991  01A7  09F5               	comf	___awmod@dividend,f
   992  01A8  09F6               	comf	___awmod@dividend+1,f
   993  01A9  0AF5               	incf	___awmod@dividend,f
   994  01AA  1903               	skipnz
   995  01AB  0AF6               	incf	___awmod@dividend+1,f
   996  01AC                     l1198:
   997  01AC  0876               	movf	___awmod@dividend+1,w
   998  01AD  00F4               	movwf	?___awmod+1
   999  01AE  0875               	movf	___awmod@dividend,w
  1000  01AF  00F3               	movwf	?___awmod
  1001  01B0                     l326:
  1002  01B0  0008               	return
  1003  01B1                     __end_of___awmod:
  1004                           
  1005                           	psect	text3
  1006  00ED                     __ptext3:	
  1007 ;; *************** function ___awdiv *****************
  1008 ;; Defined at:
  1009 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  divisor         2    2[BANK0 ] int 
  1012 ;;  dividend        2    4[BANK0 ] int 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  quotient        2    9[BANK0 ] int 
  1015 ;;  sign            1    8[BANK0 ] unsigned char 
  1016 ;;  counter         1    7[BANK0 ] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  2    2[BANK0 ] int 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       4       0       0       0
  1027 ;;      Locals:         0       4       0       0       0
  1028 ;;      Temps:          0       1       0       0       0
  1029 ;;      Totals:         0       9       0       0       0
  1030 ;;Total ram usage:        9 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function ___awdiv
  1042  00ED                     ___awdiv:
  1043  00ED                     l1120:	
  1044                           ;incstack = 0
  1045                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1046                           
  1047  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1048  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1049  00EF  01A8               	clrf	___awdiv@sign
  1050  00F0                     l1122:
  1051  00F0  1FA3               	btfss	___awdiv@divisor+1,7
  1052  00F1  28F3               	goto	u571
  1053  00F2  28F4               	goto	u570
  1054  00F3                     u571:
  1055  00F3  28FB               	goto	l1128
  1056  00F4                     u570:
  1057  00F4                     l1124:
  1058  00F4  09A2               	comf	___awdiv@divisor,f
  1059  00F5  09A3               	comf	___awdiv@divisor+1,f
  1060  00F6  0AA2               	incf	___awdiv@divisor,f
  1061  00F7  1903               	skipnz
  1062  00F8  0AA3               	incf	___awdiv@divisor+1,f
  1063  00F9                     l1126:
  1064  00F9  01A8               	clrf	___awdiv@sign
  1065  00FA  0AA8               	incf	___awdiv@sign,f
  1066  00FB                     l1128:
  1067  00FB  1FA5               	btfss	___awdiv@dividend+1,7
  1068  00FC  28FE               	goto	u581
  1069  00FD  28FF               	goto	u580
  1070  00FE                     u581:
  1071  00FE  2908               	goto	l1134
  1072  00FF                     u580:
  1073  00FF                     l1130:
  1074  00FF  09A4               	comf	___awdiv@dividend,f
  1075  0100  09A5               	comf	___awdiv@dividend+1,f
  1076  0101  0AA4               	incf	___awdiv@dividend,f
  1077  0102  1903               	skipnz
  1078  0103  0AA5               	incf	___awdiv@dividend+1,f
  1079  0104                     l1132:
  1080  0104  3001               	movlw	1
  1081  0105  00A6               	movwf	??___awdiv
  1082  0106  0826               	movf	??___awdiv,w
  1083  0107  06A8               	xorwf	___awdiv@sign,f
  1084  0108                     l1134:
  1085  0108  01A9               	clrf	___awdiv@quotient
  1086  0109  01AA               	clrf	___awdiv@quotient+1
  1087  010A                     l1136:
  1088  010A  0822               	movf	___awdiv@divisor,w
  1089  010B  0423               	iorwf	___awdiv@divisor+1,w
  1090  010C  1903               	btfsc	3,2
  1091  010D  290F               	goto	u591
  1092  010E  2910               	goto	u590
  1093  010F                     u591:
  1094  010F  2947               	goto	l1156
  1095  0110                     u590:
  1096  0110                     l1138:
  1097  0110  01A7               	clrf	___awdiv@counter
  1098  0111  0AA7               	incf	___awdiv@counter,f
  1099  0112  291E               	goto	l1144
  1100  0113                     l1140:
  1101  0113  3001               	movlw	1
  1102  0114                     u605:
  1103  0114  1003               	clrc
  1104  0115  0DA2               	rlf	___awdiv@divisor,f
  1105  0116  0DA3               	rlf	___awdiv@divisor+1,f
  1106  0117  3EFF               	addlw	-1
  1107  0118  1D03               	skipz
  1108  0119  2914               	goto	u605
  1109  011A                     l1142:
  1110  011A  3001               	movlw	1
  1111  011B  00A6               	movwf	??___awdiv
  1112  011C  0826               	movf	??___awdiv,w
  1113  011D  07A7               	addwf	___awdiv@counter,f
  1114  011E                     l1144:
  1115  011E  1FA3               	btfss	___awdiv@divisor+1,7
  1116  011F  2921               	goto	u611
  1117  0120  2922               	goto	u610
  1118  0121                     u611:
  1119  0121  2913               	goto	l1140
  1120  0122                     u610:
  1121  0122                     l1146:
  1122  0122  3001               	movlw	1
  1123  0123                     u625:
  1124  0123  1003               	clrc
  1125  0124  0DA9               	rlf	___awdiv@quotient,f
  1126  0125  0DAA               	rlf	___awdiv@quotient+1,f
  1127  0126  3EFF               	addlw	-1
  1128  0127  1D03               	skipz
  1129  0128  2923               	goto	u625
  1130  0129  0823               	movf	___awdiv@divisor+1,w
  1131  012A  0225               	subwf	___awdiv@dividend+1,w
  1132  012B  1D03               	skipz
  1133  012C  292F               	goto	u635
  1134  012D  0822               	movf	___awdiv@divisor,w
  1135  012E  0224               	subwf	___awdiv@dividend,w
  1136  012F                     u635:
  1137  012F  1C03               	skipc
  1138  0130  2932               	goto	u631
  1139  0131  2933               	goto	u630
  1140  0132                     u631:
  1141  0132  293A               	goto	l1152
  1142  0133                     u630:
  1143  0133                     l1148:
  1144  0133  0822               	movf	___awdiv@divisor,w
  1145  0134  02A4               	subwf	___awdiv@dividend,f
  1146  0135  0823               	movf	___awdiv@divisor+1,w
  1147  0136  1C03               	skipc
  1148  0137  03A5               	decf	___awdiv@dividend+1,f
  1149  0138  02A5               	subwf	___awdiv@dividend+1,f
  1150  0139                     l1150:
  1151  0139  1429               	bsf	___awdiv@quotient,0
  1152  013A                     l1152:
  1153  013A  3001               	movlw	1
  1154  013B                     u645:
  1155  013B  1003               	clrc
  1156  013C  0CA3               	rrf	___awdiv@divisor+1,f
  1157  013D  0CA2               	rrf	___awdiv@divisor,f
  1158  013E  3EFF               	addlw	-1
  1159  013F  1D03               	skipz
  1160  0140  293B               	goto	u645
  1161  0141                     l1154:
  1162  0141  3001               	movlw	1
  1163  0142  02A7               	subwf	___awdiv@counter,f
  1164  0143  1D03               	btfss	3,2
  1165  0144  2946               	goto	u651
  1166  0145  2947               	goto	u650
  1167  0146                     u651:
  1168  0146  2922               	goto	l1146
  1169  0147                     u650:
  1170  0147                     l1156:
  1171  0147  0828               	movf	___awdiv@sign,w
  1172  0148  1903               	btfsc	3,2
  1173  0149  294B               	goto	u661
  1174  014A  294C               	goto	u660
  1175  014B                     u661:
  1176  014B  2951               	goto	l1160
  1177  014C                     u660:
  1178  014C                     l1158:
  1179  014C  09A9               	comf	___awdiv@quotient,f
  1180  014D  09AA               	comf	___awdiv@quotient+1,f
  1181  014E  0AA9               	incf	___awdiv@quotient,f
  1182  014F  1903               	skipnz
  1183  0150  0AAA               	incf	___awdiv@quotient+1,f
  1184  0151                     l1160:
  1185  0151  082A               	movf	___awdiv@quotient+1,w
  1186  0152  00A3               	movwf	?___awdiv+1
  1187  0153  0829               	movf	___awdiv@quotient,w
  1188  0154  00A2               	movwf	?___awdiv
  1189  0155                     l313:
  1190  0155  0008               	return
  1191  0156                     __end_of___awdiv:
  1192                           
  1193                           	psect	text4
  1194  01B1                     __ptext4:	
  1195 ;; *************** function _isr *****************
  1196 ;; Defined at:
  1197 ;;		line 38 in file "Lab8.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0
  1213 ;;      Temps:          3       0       0       0       0
  1214 ;;      Totals:         3       0       0       0       0
  1215 ;;Total ram usage:        3 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		Interrupt level 1
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           
  1225                           ;psect for function _isr
  1226  01B1                     _isr:
  1227  01B1                     i1l982:
  1228                           
  1229                           ;Lab8.c: 40:     if (T0IF) {
  1230  01B1  1D0B               	btfss	11,2	;volatile
  1231  01B2  29B4               	goto	u50_21
  1232  01B3  29B5               	goto	u50_20
  1233  01B4                     u50_21:
  1234  01B4  29FD               	goto	i1l63
  1235  01B5                     u50_20:
  1236  01B5  29E8               	goto	i1l1014
  1237  01B6                     i1l986:
  1238                           
  1239                           ;Lab8.c: 43:                 PORTD = 0x00;
  1240  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1241  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1242  01B8  0188               	clrf	8	;volatile
  1243                           
  1244                           ;Lab8.c: 44:                 PORTC = 0x00;
  1245  01B9  0187               	clrf	7	;volatile
  1246  01BA                     i1l988:
  1247                           
  1248                           ;Lab8.c: 45:                 PORTD = 0x04;
  1249  01BA  3004               	movlw	4
  1250  01BB  0088               	movwf	8	;volatile
  1251  01BC                     i1l990:
  1252                           
  1253                           ;Lab8.c: 46:                 PORTC = display[uni];
  1254  01BC  0838               	movf	_uni,w
  1255  01BD  3E2E               	addlw	(low (_display| 0))& (0+255)
  1256  01BE  0084               	movwf	4
  1257  01BF  1383               	bcf	3,7	;select IRP bank0
  1258  01C0  0800               	movf	0,w
  1259  01C1  0087               	movwf	7	;volatile
  1260  01C2                     i1l992:
  1261                           
  1262                           ;Lab8.c: 47:                 disp = 1;
  1263  01C2  3001               	movlw	1
  1264  01C3  00F7               	movwf	_disp
  1265  01C4  3000               	movlw	0
  1266  01C5  00F8               	movwf	_disp+1
  1267                           
  1268                           ;Lab8.c: 48:                 break;
  1269  01C6  29F8               	goto	i1l60
  1270  01C7                     i1l994:
  1271                           
  1272                           ;Lab8.c: 50:                 PORTD = 0x00;
  1273  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1274  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1275  01C9  0188               	clrf	8	;volatile
  1276                           
  1277                           ;Lab8.c: 51:                 PORTC = 0x00;
  1278  01CA  0187               	clrf	7	;volatile
  1279  01CB                     i1l996:
  1280                           
  1281                           ;Lab8.c: 52:                 PORTD = 0x02;
  1282  01CB  3002               	movlw	2
  1283  01CC  0088               	movwf	8	;volatile
  1284  01CD                     i1l998:
  1285                           
  1286                           ;Lab8.c: 53:                 PORTC = display[dec];
  1287  01CD  083A               	movf	_dec,w
  1288  01CE  3E2E               	addlw	(low (_display| 0))& (0+255)
  1289  01CF  0084               	movwf	4
  1290  01D0  1383               	bcf	3,7	;select IRP bank0
  1291  01D1  0800               	movf	0,w
  1292  01D2  0087               	movwf	7	;volatile
  1293  01D3                     i1l1000:
  1294                           
  1295                           ;Lab8.c: 54:                 disp = 2;
  1296  01D3  3002               	movlw	2
  1297  01D4  00F7               	movwf	_disp
  1298  01D5  3000               	movlw	0
  1299  01D6  00F8               	movwf	_disp+1
  1300                           
  1301                           ;Lab8.c: 55:                 break;
  1302  01D7  29F8               	goto	i1l60
  1303  01D8                     i1l1002:
  1304                           
  1305                           ;Lab8.c: 57:                 PORTD = 0x00;
  1306  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1307  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1308  01DA  0188               	clrf	8	;volatile
  1309                           
  1310                           ;Lab8.c: 58:                 PORTC = 0x00;
  1311  01DB  0187               	clrf	7	;volatile
  1312  01DC                     i1l1004:
  1313                           
  1314                           ;Lab8.c: 59:                 PORTD = 0x01;
  1315  01DC  3001               	movlw	1
  1316  01DD  0088               	movwf	8	;volatile
  1317  01DE                     i1l1006:
  1318                           
  1319                           ;Lab8.c: 60:                 PORTC = display[cen];
  1320  01DE  0839               	movf	_cen,w
  1321  01DF  3E2E               	addlw	(low (_display| 0))& (0+255)
  1322  01E0  0084               	movwf	4
  1323  01E1  1383               	bcf	3,7	;select IRP bank0
  1324  01E2  0800               	movf	0,w
  1325  01E3  0087               	movwf	7	;volatile
  1326  01E4                     i1l1008:
  1327                           
  1328                           ;Lab8.c: 61:                 PORTCbits.RC7 = 1;
  1329  01E4  1787               	bsf	7,7	;volatile
  1330  01E5                     i1l1010:
  1331                           
  1332                           ;Lab8.c: 62:                 disp =0;
  1333  01E5  01F7               	clrf	_disp
  1334  01E6  01F8               	clrf	_disp+1
  1335                           
  1336                           ;Lab8.c: 63:                 break;
  1337  01E7  29F8               	goto	i1l60
  1338  01E8                     i1l1014:
  1339                           
  1340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1341                           ; Switch size 1, requested type "simple"
  1342                           ; Number of cases is 1, Range of values is 0 to 0
  1343                           ; switch strategies available:
  1344                           ; Name         Instructions Cycles
  1345                           ; simple_byte            4     3 (average)
  1346                           ; direct_byte           11     8 (fixed)
  1347                           ; jumptable            260     6 (fixed)
  1348                           ;	Chosen strategy is simple_byte
  1349  01E8  0878               	movf	_disp+1,w
  1350  01E9  3A00               	xorlw	0	; case 0
  1351  01EA  1903               	skipnz
  1352  01EB  29ED               	goto	i1l1286
  1353  01EC  29F8               	goto	i1l60
  1354  01ED                     i1l1286:
  1355                           
  1356                           ; Switch size 1, requested type "simple"
  1357                           ; Number of cases is 3, Range of values is 0 to 2
  1358                           ; switch strategies available:
  1359                           ; Name         Instructions Cycles
  1360                           ; simple_byte           10     6 (average)
  1361                           ; direct_byte           17     8 (fixed)
  1362                           ; jumptable            260     6 (fixed)
  1363                           ;	Chosen strategy is simple_byte
  1364  01ED  0877               	movf	_disp,w
  1365  01EE  3A00               	xorlw	0	; case 0
  1366  01EF  1903               	skipnz
  1367  01F0  29B6               	goto	i1l986
  1368  01F1  3A01               	xorlw	1	; case 1
  1369  01F2  1903               	skipnz
  1370  01F3  29C7               	goto	i1l994
  1371  01F4  3A03               	xorlw	3	; case 2
  1372  01F5  1903               	skipnz
  1373  01F6  29D8               	goto	i1l1002
  1374  01F7  29F8               	goto	i1l60
  1375  01F8                     i1l60:
  1376                           
  1377                           ;Lab8.c: 65:         INTCONbits.T0IF = 0;
  1378  01F8  110B               	bcf	11,2	;volatile
  1379  01F9                     i1l1016:
  1380                           
  1381                           ;Lab8.c: 66:         TMR0 = 178;
  1382  01F9  30B2               	movlw	178
  1383  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1384  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1385  01FC  0081               	movwf	1	;volatile
  1386  01FD                     i1l63:
  1387  01FD  0872               	movf	??_isr+2,w
  1388  01FE  008A               	movwf	10
  1389  01FF  0871               	movf	??_isr+1,w
  1390  0200  0084               	movwf	4
  1391  0201  0E70               	swapf	??_isr,w
  1392  0202  0083               	movwf	3
  1393  0203  0EFE               	swapf	btemp,f
  1394  0204  0E7E               	swapf	btemp,w
  1395  0205  0009               	retfie
  1396  0206                     __end_of_isr:
  1397  007E                     btemp	set	126	;btemp
  1398  007E                     wtemp0	set	126
  1399                           
  1400                           	psect	intentry
  1401  0004                     __pintentry:	
  1402                           ;incstack = 0
  1403                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1404                           
  1405  0004                     interrupt_function:
  1406  007E                     saved_w	set	btemp
  1407  0004  00FE               	movwf	btemp
  1408  0005  0E03               	swapf	3,w
  1409  0006  00F0               	movwf	??_isr
  1410  0007  0804               	movf	4,w
  1411  0008  00F1               	movwf	??_isr+1
  1412  0009  080A               	movf	10,w
  1413  000A  00F2               	movwf	??_isr+2
  1414  000B  120A  118A  29B1   	ljmp	_isr
  1415                           
  1416                           	psect	config
  1417                           
  1418                           ;Config register CONFIG1 @ 0x2007
  1419                           ;	Oscillator Selection bits
  1420                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1421                           ;	Watchdog Timer Enable bit
  1422                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1423                           ;	Power-up Timer Enable bit
  1424                           ;	PWRTE = ON, PWRT enabled
  1425                           ;	RE3/MCLR pin function select bit
  1426                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1427                           ;	Code Protection bit
  1428                           ;	CP = OFF, Program memory code protection is disabled
  1429                           ;	Data Code Protection bit
  1430                           ;	CPD = OFF, Data memory code protection is disabled
  1431                           ;	Brown Out Reset Selection bits
  1432                           ;	BOREN = OFF, BOR disabled
  1433                           ;	Internal External Switchover bit
  1434                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1435                           ;	Fail-Safe Clock Monitor Enabled bit
  1436                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1437                           ;	Low Voltage Programming Enable bit
  1438                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1439                           ;	In-Circuit Debugger Mode bit
  1440                           ;	DEBUG = 0x1, unprogrammed default
  1441  2007                     	org	8199
  1442  2007  30C4               	dw	12484
  1443                           
  1444                           ;Config register CONFIG2 @ 0x2008
  1445                           ;	Brown-out Reset Selection bit
  1446                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1447                           ;	Flash Program Memory Self Write Enable bits
  1448                           ;	WRT = OFF, Write protection off
  1449  2008                     	org	8200
  1450  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         3
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     14      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod
    _main->___wmul
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2094
                                             11 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     793
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     985
                                              2 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___awmod
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      E      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 10:38:38 2021

                      pc 0002             ___awdiv@sign 0028                       fsr 0004  
    ___wmul@multiplicand 0075                      l160 0216                      l313 0155  
                    l162 0230                      l326 01B0                      u610 0122  
                    u530 020E                      u611 0121                      u531 020D  
                    u605 0114                      u630 0133                      u710 0185  
                    u631 0132                      u711 0184                      u720 018F  
                    u560 022A                      u625 0123                      u721 018E  
                    u705 0177                      u561 0229                      u545 0217  
                    u650 0147                      u570 00F4                      u651 0146  
                    u635 012F                      u571 00F3                      u555 021E  
                    u660 014C                      u580 00FF                      u740 01A2  
                    u661 014B                      u645 013B                      u581 00FE  
                    u741 01A1                      u725 018B                      u590 0110  
                    u750 01A7                      u670 015D                      u591 010F  
                    u751 01A6                      u735 0196                      u671 015C  
                    u680 0168                      u760 00A9                      u681 0167  
                    u761 00A8                      u690 0173                      u770 00B2  
                    u691 0172                      u771 00B1                      u787 00E4  
                    _dec 003A                      _cen 0039                      _isr 01B1  
                    fsr0 0004                      _uni 0038                      indf 0000  
           ___awmod@sign 0022                     l1110 020E                     l1120 00ED  
                   l1112 021D                     l1130 00FF                     l1122 00F0  
                   l1114 0224                     l1106 0206                     l1210 0034  
                   l1202 0026                     l1140 0113                     l1132 0104  
                   l1124 00F4                     l1116 022A                     l1108 020A  
                   l1220 003D                     l1212 0036                     l1204 002A  
                   l1150 0139                     l1142 011A                     l1134 0108  
                   l1126 00F9                     l1230 0043                     l1222 003E  
                   l1214 003A                     l1206 002B                     l1160 0151  
                   l1152 013A                     l1144 011E                     l1136 010A  
                   l1128 00FB                     l1240 004A                     l1232 0046  
                   l1224 003F                     l1216 003B                     l1208 0032  
                   l1154 0141                     l1146 0122                     l1138 0110  
                   l1170 0162                     l1250 00A5                     l1242 004D  
                   l1234 0047                     l1226 0040                     l1218 003C  
                   l1148 0133                     l1156 0147                     l1180 0176  
                   l1172 0164                     l1164 0156                     l1260 00DE  
                   l1252 00A9                     l1244 0063                     l1236 0048  
                   l1228 0042                     l1158 014C                     l1190 0195  
                   l1182 017D                     l1174 0168                     l1166 0159  
                   l1262 00E0                     l1254 00B2                     l1246 0079  
                   l1238 0049                     l1192 019C                     l1184 0181  
                   l1176 016D                     l1168 015D                     l1264 00E6  
                   l1256 00B4                     l1248 008F                     l1186 0185  
                   l1178 0173                     l1194 01A2                     l1258 00B9  
                   l1196 01A7                     l1188 018F                     l1198 01AC  
                   ?_isr 0070                     _T0IF 005A                     i1l60 01F8  
                   i1l63 01FD                     _TMR0 0001                     _disp 0077  
                   _cont 0079                     _main 0026                     _val1 007A  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0156          __end_of___awmod 01B1  
                  _ANSEL 0188          ___awdiv@divisor 0022                    i1l990 01BC  
                  i1l982 01B1                    i1l992 01C2                    i1l994 01C7  
                  i1l986 01B6                    i1l996 01CB                    i1l988 01BA  
                  i1l998 01CD          ___awdiv@counter 0027                    u50_20 01B5  
                  u50_21 01B4                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 00ED                   ??_main 002B                   _ADRESH 001E  
       ___awdiv@dividend 0024                   _ANSELH 0189                   i1l1000 01D3  
                 i1l1010 01E5                   i1l1002 01D8                   i1l1004 01DC  
                 i1l1006 01DE                   i1l1014 01E8                   i1l1016 01F9  
                 i1l1008 01E4                   i1l1286 01ED                   _OSCCON 008F  
                 ___wmul 0206                ??___awdiv 0026                ??___awmod 0020  
       ___awdiv@quotient 0029          ___awmod@divisor 0073          ___awmod@counter 0021  
                 saved_w 007E  __end_of__initialization 0022           __pcstackCOMMON 0070  
           __pidataBANK0 0244               __pnvCOMMON 007A               __pmaintext 0026  
                ?___wmul 0073               __pintentry 0004                  ___awdiv 00ED  
                ___awmod 0156          __size_of___wmul 002B                  __ptext1 0206  
                __ptext2 0156                  __ptext3 00ED                  __ptext4 01B1  
                _display 002E             __size_of_isr 0055         ___awmod@dividend 0075  
   end_of_initialization 0022                _PORTCbits 0007           __end_of___wmul 0231  
    start_initialization 0011              __end_of_isr 0206                 ??___wmul 0077  
             init_fetch0 0231              __pdataBANK0 002E              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020                __pnvBANK0 0038  
               ?___awdiv 0022                 ?___awmod 0073        interrupt_function 0004  
         ___wmul@product 0020               _ADCON0bits 001F               _ADCON1bits 009F  
      ___wmul@multiplier 0073         __size_of___awdiv 0069         __size_of___awmod 005B  
          __size_of_main 00C7               _INTCONbits 000B                 init_ram0 0235  
               intlevel1 0000               _OPTION_REG 0081  
