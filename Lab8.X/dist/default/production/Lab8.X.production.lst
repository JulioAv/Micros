

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 11:57:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213  0202                     __pidataBANK0:
   214                           
   215                           ;initializer for _display
   216  0202  343F               	retlw	63
   217  0203  3406               	retlw	6
   218  0204  345B               	retlw	91
   219  0205  344F               	retlw	79
   220  0206  3466               	retlw	102
   221  0207  346D               	retlw	109
   222  0208  347D               	retlw	125
   223  0209  3407               	retlw	7
   224  020A  347F               	retlw	127
   225  020B  3467               	retlw	103
   226                           
   227                           	psect	nvCOMMON
   228  0078                     __pnvCOMMON:
   229  0078                     _dec:
   230  0078                     	ds	1
   231  0079                     _val1:
   232  0079                     	ds	1
   233                           
   234                           	psect	nvBANK0
   235  0035                     __pnvBANK0:
   236  0035                     _uni:
   237  0035                     	ds	1
   238  0036                     _cen:
   239  0036                     	ds	1
   240  0001                     _TMR0	set	1
   241  000B                     _INTCONbits	set	11
   242  0007                     _PORTC	set	7
   243  0008                     _PORTD	set	8
   244  000C                     _PIR1bits	set	12
   245  001E                     _ADRESH	set	30
   246  0006                     _PORTB	set	6
   247  001F                     _ADCON0bits	set	31
   248  005A                     _T0IF	set	90
   249  0066                     _ADIF	set	102
   250  008C                     _PIE1bits	set	140
   251  009F                     _ADCON1bits	set	159
   252  0081                     _OPTION_REG	set	129
   253  008F                     _OSCCON	set	143
   254  0088                     _TRISD	set	136
   255  0087                     _TRISC	set	135
   256  0086                     _TRISB	set	134
   257  0085                     _TRISA	set	133
   258  0189                     _ANSELH	set	393
   259  0188                     _ANSEL	set	392
   260                           
   261                           	psect	cinit
   262  0011                     start_initialization:	
   263                           ; #config settings
   264                           
   265  0011                     __initialization:
   266                           
   267                           ; Initialize objects allocated to BANK0
   268  0011  1383               	bcf	3,7	;select IRP bank0
   269  0012  3035               	movlw	low (__pdataBANK0+10)
   270  0013  00FD               	movwf	btemp+-1
   271  0014  3002               	movlw	high __pidataBANK0
   272  0015  00FE               	movwf	btemp
   273  0016  3002               	movlw	low __pidataBANK0
   274  0017  00FF               	movwf	btemp+1
   275  0018  302B               	movlw	low __pdataBANK0
   276  0019  0084               	movwf	4
   277  001A  120A  118A  21F3  120A  118A  	fcall	init_ram0
   278                           
   279                           ; Clear objects allocated to COMMON
   280  001F  01F5               	clrf	__pbssCOMMON& (0+127)
   281  0020  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   282  0021  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   283  0022                     end_of_initialization:	
   284                           ;End of C runtime variable initialization code
   285                           
   286  0022                     __end_of__initialization:
   287  0022  0183               	clrf	3
   288  0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   289                           
   290                           	psect	bssCOMMON
   291  0075                     __pbssCOMMON:
   292  0075                     _disp:
   293  0075                     	ds	2
   294  0077                     _cont:
   295  0077                     	ds	1
   296                           
   297                           	psect	dataBANK0
   298  002B                     __pdataBANK0:
   299  002B                     _display:
   300  002B                     	ds	10
   301                           
   302                           	psect	inittext
   303  01EF                     init_fetch0:	
   304                           ;	Called with low address in FSR and high address in W
   305                           
   306  01EF  087E               	movf	btemp,w
   307  01F0  008A               	movwf	10
   308  01F1  087F               	movf	btemp+1,w
   309  01F2  0082               	movwf	2
   310  01F3                     init_ram0:	
   311                           ;Called with:
   312                           ;	high address of idata address in btemp 
   313                           ;	low address of idata address in btemp+1 
   314                           ;	low address of data in FSR
   315                           ;	high address + 1 of data in btemp-1
   316                           
   317  01F3  120A  118A  21EF  120A  118A  	fcall	init_fetch0
   318  01F8  0080               	movwf	0
   319  01F9  0A84               	incf	4,f
   320  01FA  0804               	movf	4,w
   321  01FB  067D               	xorwf	btemp+-1,w
   322  01FC  1903               	btfsc	3,2
   323  01FD  3400               	retlw	0
   324  01FE  0AFF               	incf	btemp+1,f
   325  01FF  1903               	btfsc	3,2
   326  0200  0AFE               	incf	btemp,f
   327  0201  29F3               	goto	init_ram0
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:
   331  0070                     ?_isr:
   332  0070                     ??_isr:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338                           
   339                           ; 1 bytes @ 0x0
   340  0070                     	ds	4
   341  0074                     ??___awdiv:
   342  0074                     ??___awmod:	
   343                           ; 1 bytes @ 0x4
   344                           
   345                           
   346                           ; 1 bytes @ 0x4
   347  0074                     	ds	1
   348                           
   349                           	psect	cstackBANK0
   350  0020                     __pcstackBANK0:
   351  0020                     ?___awdiv:
   352  0020                     ?___awmod:	
   353                           ; 2 bytes @ 0x0
   354                           
   355  0020                     ___awdiv@divisor:	
   356                           ; 2 bytes @ 0x0
   357                           
   358  0020                     ___awmod@divisor:	
   359                           ; 2 bytes @ 0x0
   360                           
   361                           
   362                           ; 2 bytes @ 0x0
   363  0020                     	ds	2
   364  0022                     ___awdiv@dividend:
   365  0022                     ___awmod@dividend:	
   366                           ; 2 bytes @ 0x2
   367                           
   368                           
   369                           ; 2 bytes @ 0x2
   370  0022                     	ds	2
   371  0024                     ___awdiv@counter:
   372  0024                     ___awmod@counter:	
   373                           ; 1 bytes @ 0x4
   374                           
   375                           
   376                           ; 1 bytes @ 0x4
   377  0024                     	ds	1
   378  0025                     ___awdiv@sign:
   379  0025                     ___awmod@sign:	
   380                           ; 1 bytes @ 0x5
   381                           
   382                           
   383                           ; 1 bytes @ 0x5
   384  0025                     	ds	1
   385  0026                     ___awdiv@quotient:
   386                           
   387                           ; 2 bytes @ 0x6
   388  0026                     	ds	2
   389  0028                     ??_main:
   390                           
   391                           ; 1 bytes @ 0x8
   392  0028                     	ds	3
   393                           
   394                           	psect	maintext
   395  0026                     __pmaintext:	
   396 ;;
   397 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   398 ;;
   399 ;; *************** function _main *****************
   400 ;; Defined at:
   401 ;;		line 79 in file "Lab8.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, pclath, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : B00/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0
   417 ;;      Temps:          0       3       0       0       0
   418 ;;      Totals:         0       3       0       0       0
   419 ;;Total ram usage:        3 bytes
   420 ;; Hardware stack levels required when called:    2
   421 ;; This function calls:
   422 ;;		___awdiv
   423 ;;		___awmod
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           
   430                           ;psect for function _main
   431  0026                     _main:
   432  0026                     l1183:	
   433                           ;incstack = 0
   434                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   435                           
   436                           
   437                           ;Lab8.c: 80:     ANSEL = 0x03;
   438  0026  3003               	movlw	3
   439  0027  1683               	bsf	3,5	;RP0=1, select bank3
   440  0028  1703               	bsf	3,6	;RP1=1, select bank3
   441  0029  0088               	movwf	8	;volatile
   442  002A                     l1185:
   443                           
   444                           ;Lab8.c: 81:     ANSELH = 0x00;
   445  002A  0189               	clrf	9	;volatile
   446  002B                     l1187:
   447                           
   448                           ;Lab8.c: 83:     TRISA = 0x03;
   449  002B  3003               	movlw	3
   450  002C  1683               	bsf	3,5	;RP0=1, select bank1
   451  002D  1303               	bcf	3,6	;RP1=0, select bank1
   452  002E  0085               	movwf	5	;volatile
   453                           
   454                           ;Lab8.c: 84:     TRISB = 0x00;
   455  002F  0186               	clrf	6	;volatile
   456                           
   457                           ;Lab8.c: 85:     TRISC = 0x00;
   458  0030  0187               	clrf	7	;volatile
   459                           
   460                           ;Lab8.c: 86:     TRISD = 0x00;
   461  0031  0188               	clrf	8	;volatile
   462  0032                     l1189:
   463                           
   464                           ;Lab8.c: 88:     OSCCON = 0B1000111;
   465  0032  3047               	movlw	71
   466  0033  008F               	movwf	15	;volatile
   467  0034                     l1191:
   468                           
   469                           ;Lab8.c: 89:     OPTION_REG = 0B01000011;
   470  0034  3043               	movlw	67
   471  0035  0081               	movwf	1	;volatile
   472  0036                     l1193:
   473                           
   474                           ;Lab8.c: 90:     TMR0 = 178;
   475  0036  30B2               	movlw	178
   476  0037  1283               	bcf	3,5	;RP0=0, select bank0
   477  0038  1303               	bcf	3,6	;RP1=0, select bank0
   478  0039  0081               	movwf	1	;volatile
   479  003A                     l1195:
   480                           
   481                           ;Lab8.c: 92:     PORTB = 0x00;
   482  003A  0186               	clrf	6	;volatile
   483  003B                     l1197:
   484                           
   485                           ;Lab8.c: 93:     PORTC = 0x00;
   486  003B  0187               	clrf	7	;volatile
   487  003C                     l1199:
   488                           
   489                           ;Lab8.c: 94:     PORTD = 0x00;
   490  003C  0188               	clrf	8	;volatile
   491  003D                     l1201:
   492                           
   493                           ;Lab8.c: 96:     ADCON0bits.ADCS0 = 0;
   494  003D  131F               	bcf	31,6	;volatile
   495  003E                     l1203:
   496                           
   497                           ;Lab8.c: 97:     ADCON0bits.ADCS1 = 0;
   498  003E  139F               	bcf	31,7	;volatile
   499  003F                     l1205:
   500                           
   501                           ;Lab8.c: 98:     ADCON0bits.GO_DONE = 0;
   502  003F  109F               	bcf	31,1	;volatile
   503  0040                     l1207:
   504                           
   505                           ;Lab8.c: 99:     ADCON0bits.CHS = 0;
   506  0040  30C3               	movlw	-61
   507  0041  059F               	andwf	31,f	;volatile
   508  0042                     l1209:
   509                           
   510                           ;Lab8.c: 100:     ADCON0bits.ADON = 1;
   511  0042  141F               	bsf	31,0	;volatile
   512  0043                     l1211:
   513                           
   514                           ;Lab8.c: 102:     ADCON1bits.ADFM = 0;
   515  0043  1683               	bsf	3,5	;RP0=1, select bank1
   516  0044  1303               	bcf	3,6	;RP1=0, select bank1
   517  0045  139F               	bcf	31,7	;volatile
   518  0046                     l1213:
   519                           
   520                           ;Lab8.c: 103:     ADCON1bits.VCFG0 = 0;
   521  0046  121F               	bcf	31,4	;volatile
   522  0047                     l1215:
   523                           
   524                           ;Lab8.c: 104:     ADCON1bits.VCFG1 = 0;
   525  0047  129F               	bcf	31,5	;volatile
   526  0048                     l1217:
   527                           
   528                           ;Lab8.c: 106:     INTCONbits.GIE = 1;
   529  0048  178B               	bsf	11,7	;volatile
   530  0049                     l1219:
   531                           
   532                           ;Lab8.c: 107:     INTCONbits.T0IE = 1;
   533  0049  168B               	bsf	11,5	;volatile
   534  004A                     l1221:
   535                           
   536                           ;Lab8.c: 108:     INTCONbits.PEIE = 1;
   537  004A  170B               	bsf	11,6	;volatile
   538  004B                     l1223:
   539                           
   540                           ;Lab8.c: 109:     PIE1bits.ADIE = 1;
   541  004B  170C               	bsf	12,6	;volatile
   542  004C                     l1225:
   543                           
   544                           ;Lab8.c: 110:     ADCON0bits.GO = 1;
   545  004C  1283               	bcf	3,5	;RP0=0, select bank0
   546  004D  1303               	bcf	3,6	;RP1=0, select bank0
   547  004E  149F               	bsf	31,1	;volatile
   548  004F                     l1227:
   549                           
   550                           ;Lab8.c: 113:         cen = cont/100;
   551  004F  3064               	movlw	100
   552  0050  00A0               	movwf	___awdiv@divisor
   553  0051  3000               	movlw	0
   554  0052  00A1               	movwf	___awdiv@divisor+1
   555  0053  0877               	movf	_cont,w
   556  0054  00A8               	movwf	??_main
   557  0055  01A9               	clrf	??_main+1
   558  0056  0828               	movf	??_main,w
   559  0057  00A2               	movwf	___awdiv@dividend
   560  0058  0829               	movf	??_main+1,w
   561  0059  00A3               	movwf	___awdiv@dividend+1
   562  005A  120A  118A  20C8  120A  118A  	fcall	___awdiv
   563  005F  1283               	bcf	3,5	;RP0=0, select bank0
   564  0060  1303               	bcf	3,6	;RP1=0, select bank0
   565  0061  0820               	movf	?___awdiv,w
   566  0062  00AA               	movwf	??_main+2
   567  0063  082A               	movf	??_main+2,w
   568  0064  00B6               	movwf	_cen
   569  0065                     l1229:
   570                           
   571                           ;Lab8.c: 114:         val1 = cont%100;
   572  0065  3064               	movlw	100
   573  0066  00A0               	movwf	___awmod@divisor
   574  0067  3000               	movlw	0
   575  0068  00A1               	movwf	___awmod@divisor+1
   576  0069  0877               	movf	_cont,w
   577  006A  00A8               	movwf	??_main
   578  006B  01A9               	clrf	??_main+1
   579  006C  0828               	movf	??_main,w
   580  006D  00A2               	movwf	___awmod@dividend
   581  006E  0829               	movf	??_main+1,w
   582  006F  00A3               	movwf	___awmod@dividend+1
   583  0070  120A  118A  2194  120A  118A  	fcall	___awmod
   584  0075  1283               	bcf	3,5	;RP0=0, select bank0
   585  0076  1303               	bcf	3,6	;RP1=0, select bank0
   586  0077  0820               	movf	?___awmod,w
   587  0078  00AA               	movwf	??_main+2
   588  0079  082A               	movf	??_main+2,w
   589  007A  00F9               	movwf	_val1
   590  007B                     l1231:
   591                           
   592                           ;Lab8.c: 115:         dec = val1/10;
   593  007B  300A               	movlw	10
   594  007C  00A0               	movwf	___awdiv@divisor
   595  007D  3000               	movlw	0
   596  007E  00A1               	movwf	___awdiv@divisor+1
   597  007F  0879               	movf	_val1,w
   598  0080  00A8               	movwf	??_main
   599  0081  01A9               	clrf	??_main+1
   600  0082  0828               	movf	??_main,w
   601  0083  00A2               	movwf	___awdiv@dividend
   602  0084  0829               	movf	??_main+1,w
   603  0085  00A3               	movwf	___awdiv@dividend+1
   604  0086  120A  118A  20C8  120A  118A  	fcall	___awdiv
   605  008B  1283               	bcf	3,5	;RP0=0, select bank0
   606  008C  1303               	bcf	3,6	;RP1=0, select bank0
   607  008D  0820               	movf	?___awdiv,w
   608  008E  00AA               	movwf	??_main+2
   609  008F  082A               	movf	??_main+2,w
   610  0090  00F8               	movwf	_dec
   611  0091                     l1233:
   612                           
   613                           ;Lab8.c: 116:         uni = val1%10;
   614  0091  300A               	movlw	10
   615  0092  00A0               	movwf	___awmod@divisor
   616  0093  3000               	movlw	0
   617  0094  00A1               	movwf	___awmod@divisor+1
   618  0095  0879               	movf	_val1,w
   619  0096  00A8               	movwf	??_main
   620  0097  01A9               	clrf	??_main+1
   621  0098  0828               	movf	??_main,w
   622  0099  00A2               	movwf	___awmod@dividend
   623  009A  0829               	movf	??_main+1,w
   624  009B  00A3               	movwf	___awmod@dividend+1
   625  009C  120A  118A  2194  120A  118A  	fcall	___awmod
   626  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   627  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   628  00A3  0820               	movf	?___awmod,w
   629  00A4  00AA               	movwf	??_main+2
   630  00A5  082A               	movf	??_main+2,w
   631  00A6  00B5               	movwf	_uni
   632  00A7                     l1235:
   633                           
   634                           ;Lab8.c: 118:         if (ADCON0bits.GO == 0){
   635  00A7  189F               	btfsc	31,1	;volatile
   636  00A8  28AA               	goto	u681
   637  00A9  28AB               	goto	u680
   638  00AA                     u681:
   639  00AA  284F               	goto	l1227
   640  00AB                     u680:
   641  00AB                     l1237:
   642                           
   643                           ;Lab8.c: 119:             if (ADCON0bits.CHS == 0){
   644  00AB  0C1F               	rrf	31,w	;volatile
   645  00AC  00A8               	movwf	??_main
   646  00AD  0C28               	rrf	??_main,w
   647  00AE  390F               	andlw	15
   648  00AF  3A00               	xorlw	0
   649  00B0  1D03               	skipz
   650  00B1  28B3               	goto	u691
   651  00B2  28B4               	goto	u690
   652  00B3                     u691:
   653  00B3  28B9               	goto	l1241
   654  00B4                     u690:
   655  00B4                     l1239:
   656                           
   657                           ;Lab8.c: 120:                 ADCON0bits.CHS = 1;
   658  00B4  081F               	movf	31,w	;volatile
   659  00B5  39C3               	andlw	-61
   660  00B6  3804               	iorlw	4
   661  00B7  009F               	movwf	31	;volatile
   662                           
   663                           ;Lab8.c: 121:             }
   664  00B8  28BB               	goto	l1243
   665  00B9                     l1241:
   666                           
   667                           ;Lab8.c: 123:                 ADCON0bits.CHS = 0;
   668  00B9  30C3               	movlw	-61
   669  00BA  059F               	andwf	31,f	;volatile
   670  00BB                     l1243:
   671                           
   672                           ;Lab8.c: 125:             _delay((unsigned long)((50)*(1000000/4000000.0)));
   673  00BB  3003               	movlw	3
   674  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   675  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   676  00BE  00A8               	movwf	??_main
   677  00BF                     u707:
   678  00BF  0BA8               	decfsz	??_main,f
   679  00C0  28BF               	goto	u707
   680  00C1                     l1245:
   681                           
   682                           ;Lab8.c: 126:             ADCON0bits.GO = 1;
   683  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   684  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   685  00C3  149F               	bsf	31,1	;volatile
   686  00C4  284F               	goto	l1227
   687  00C5  120A  118A  280E   	ljmp	start
   688  00C8                     __end_of_main:
   689                           
   690                           	psect	text1
   691  0194                     __ptext1:	
   692 ;; *************** function ___awmod *****************
   693 ;; Defined at:
   694 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  divisor         2    0[BANK0 ] int 
   697 ;;  dividend        2    2[BANK0 ] int 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  sign            1    5[BANK0 ] unsigned char 
   700 ;;  counter         1    4[BANK0 ] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  2    0[BANK0 ] int 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       4       0       0       0
   711 ;;      Locals:         0       2       0       0       0
   712 ;;      Temps:          1       0       0       0       0
   713 ;;      Totals:         1       6       0       0       0
   714 ;;Total ram usage:        7 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function ___awmod
   726  0194                     ___awmod:
   727  0194                     l1145:	
   728                           ;incstack = 0
   729                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   730                           
   731  0194  1283               	bcf	3,5	;RP0=0, select bank0
   732  0195  1303               	bcf	3,6	;RP1=0, select bank0
   733  0196  01A5               	clrf	___awmod@sign
   734  0197                     l1147:
   735  0197  1FA3               	btfss	___awmod@dividend+1,7
   736  0198  299A               	goto	u591
   737  0199  299B               	goto	u590
   738  019A                     u591:
   739  019A  29A2               	goto	l1153
   740  019B                     u590:
   741  019B                     l1149:
   742  019B  09A2               	comf	___awmod@dividend,f
   743  019C  09A3               	comf	___awmod@dividend+1,f
   744  019D  0AA2               	incf	___awmod@dividend,f
   745  019E  1903               	skipnz
   746  019F  0AA3               	incf	___awmod@dividend+1,f
   747  01A0                     l1151:
   748  01A0  01A5               	clrf	___awmod@sign
   749  01A1  0AA5               	incf	___awmod@sign,f
   750  01A2                     l1153:
   751  01A2  1FA1               	btfss	___awmod@divisor+1,7
   752  01A3  29A5               	goto	u601
   753  01A4  29A6               	goto	u600
   754  01A5                     u601:
   755  01A5  29AB               	goto	l1157
   756  01A6                     u600:
   757  01A6                     l1155:
   758  01A6  09A0               	comf	___awmod@divisor,f
   759  01A7  09A1               	comf	___awmod@divisor+1,f
   760  01A8  0AA0               	incf	___awmod@divisor,f
   761  01A9  1903               	skipnz
   762  01AA  0AA1               	incf	___awmod@divisor+1,f
   763  01AB                     l1157:
   764  01AB  0820               	movf	___awmod@divisor,w
   765  01AC  0421               	iorwf	___awmod@divisor+1,w
   766  01AD  1903               	btfsc	3,2
   767  01AE  29B0               	goto	u611
   768  01AF  29B1               	goto	u610
   769  01B0                     u611:
   770  01B0  29E0               	goto	l1175
   771  01B1                     u610:
   772  01B1                     l1159:
   773  01B1  01A4               	clrf	___awmod@counter
   774  01B2  0AA4               	incf	___awmod@counter,f
   775  01B3  29BF               	goto	l1165
   776  01B4                     l1161:
   777  01B4  3001               	movlw	1
   778  01B5                     u625:
   779  01B5  1003               	clrc
   780  01B6  0DA0               	rlf	___awmod@divisor,f
   781  01B7  0DA1               	rlf	___awmod@divisor+1,f
   782  01B8  3EFF               	addlw	-1
   783  01B9  1D03               	skipz
   784  01BA  29B5               	goto	u625
   785  01BB                     l1163:
   786  01BB  3001               	movlw	1
   787  01BC  00F4               	movwf	??___awmod
   788  01BD  0874               	movf	??___awmod,w
   789  01BE  07A4               	addwf	___awmod@counter,f
   790  01BF                     l1165:
   791  01BF  1FA1               	btfss	___awmod@divisor+1,7
   792  01C0  29C2               	goto	u631
   793  01C1  29C3               	goto	u630
   794  01C2                     u631:
   795  01C2  29B4               	goto	l1161
   796  01C3                     u630:
   797  01C3                     l1167:
   798  01C3  0821               	movf	___awmod@divisor+1,w
   799  01C4  0223               	subwf	___awmod@dividend+1,w
   800  01C5  1D03               	skipz
   801  01C6  29C9               	goto	u645
   802  01C7  0820               	movf	___awmod@divisor,w
   803  01C8  0222               	subwf	___awmod@dividend,w
   804  01C9                     u645:
   805  01C9  1C03               	skipc
   806  01CA  29CC               	goto	u641
   807  01CB  29CD               	goto	u640
   808  01CC                     u641:
   809  01CC  29D3               	goto	l1171
   810  01CD                     u640:
   811  01CD                     l1169:
   812  01CD  0820               	movf	___awmod@divisor,w
   813  01CE  02A2               	subwf	___awmod@dividend,f
   814  01CF  0821               	movf	___awmod@divisor+1,w
   815  01D0  1C03               	skipc
   816  01D1  03A3               	decf	___awmod@dividend+1,f
   817  01D2  02A3               	subwf	___awmod@dividend+1,f
   818  01D3                     l1171:
   819  01D3  3001               	movlw	1
   820  01D4                     u655:
   821  01D4  1003               	clrc
   822  01D5  0CA1               	rrf	___awmod@divisor+1,f
   823  01D6  0CA0               	rrf	___awmod@divisor,f
   824  01D7  3EFF               	addlw	-1
   825  01D8  1D03               	skipz
   826  01D9  29D4               	goto	u655
   827  01DA                     l1173:
   828  01DA  3001               	movlw	1
   829  01DB  02A4               	subwf	___awmod@counter,f
   830  01DC  1D03               	btfss	3,2
   831  01DD  29DF               	goto	u661
   832  01DE  29E0               	goto	u660
   833  01DF                     u661:
   834  01DF  29C3               	goto	l1167
   835  01E0                     u660:
   836  01E0                     l1175:
   837  01E0  0825               	movf	___awmod@sign,w
   838  01E1  1903               	btfsc	3,2
   839  01E2  29E4               	goto	u671
   840  01E3  29E5               	goto	u670
   841  01E4                     u671:
   842  01E4  29EA               	goto	l1179
   843  01E5                     u670:
   844  01E5                     l1177:
   845  01E5  09A2               	comf	___awmod@dividend,f
   846  01E6  09A3               	comf	___awmod@dividend+1,f
   847  01E7  0AA2               	incf	___awmod@dividend,f
   848  01E8  1903               	skipnz
   849  01E9  0AA3               	incf	___awmod@dividend+1,f
   850  01EA                     l1179:
   851  01EA  0823               	movf	___awmod@dividend+1,w
   852  01EB  00A1               	movwf	?___awmod+1
   853  01EC  0822               	movf	___awmod@dividend,w
   854  01ED  00A0               	movwf	?___awmod
   855  01EE                     l333:
   856  01EE  0008               	return
   857  01EF                     __end_of___awmod:
   858                           
   859                           	psect	text2
   860  00C8                     __ptext2:	
   861 ;; *************** function ___awdiv *****************
   862 ;; Defined at:
   863 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;  divisor         2    0[BANK0 ] int 
   866 ;;  dividend        2    2[BANK0 ] int 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  quotient        2    6[BANK0 ] int 
   869 ;;  sign            1    5[BANK0 ] unsigned char 
   870 ;;  counter         1    4[BANK0 ] unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  2    0[BANK0 ] int 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       4       0       0       0
   881 ;;      Locals:         0       4       0       0       0
   882 ;;      Temps:          1       0       0       0       0
   883 ;;      Totals:         1       8       0       0       0
   884 ;;Total ram usage:        9 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           
   895                           ;psect for function ___awdiv
   896  00C8                     ___awdiv:
   897  00C8                     l1101:	
   898                           ;incstack = 0
   899                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   900                           
   901  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   902  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   903  00CA  01A5               	clrf	___awdiv@sign
   904  00CB                     l1103:
   905  00CB  1FA1               	btfss	___awdiv@divisor+1,7
   906  00CC  28CE               	goto	u491
   907  00CD  28CF               	goto	u490
   908  00CE                     u491:
   909  00CE  28D6               	goto	l1109
   910  00CF                     u490:
   911  00CF                     l1105:
   912  00CF  09A0               	comf	___awdiv@divisor,f
   913  00D0  09A1               	comf	___awdiv@divisor+1,f
   914  00D1  0AA0               	incf	___awdiv@divisor,f
   915  00D2  1903               	skipnz
   916  00D3  0AA1               	incf	___awdiv@divisor+1,f
   917  00D4                     l1107:
   918  00D4  01A5               	clrf	___awdiv@sign
   919  00D5  0AA5               	incf	___awdiv@sign,f
   920  00D6                     l1109:
   921  00D6  1FA3               	btfss	___awdiv@dividend+1,7
   922  00D7  28D9               	goto	u501
   923  00D8  28DA               	goto	u500
   924  00D9                     u501:
   925  00D9  28E3               	goto	l1115
   926  00DA                     u500:
   927  00DA                     l1111:
   928  00DA  09A2               	comf	___awdiv@dividend,f
   929  00DB  09A3               	comf	___awdiv@dividend+1,f
   930  00DC  0AA2               	incf	___awdiv@dividend,f
   931  00DD  1903               	skipnz
   932  00DE  0AA3               	incf	___awdiv@dividend+1,f
   933  00DF                     l1113:
   934  00DF  3001               	movlw	1
   935  00E0  00F4               	movwf	??___awdiv
   936  00E1  0874               	movf	??___awdiv,w
   937  00E2  06A5               	xorwf	___awdiv@sign,f
   938  00E3                     l1115:
   939  00E3  01A6               	clrf	___awdiv@quotient
   940  00E4  01A7               	clrf	___awdiv@quotient+1
   941  00E5                     l1117:
   942  00E5  0820               	movf	___awdiv@divisor,w
   943  00E6  0421               	iorwf	___awdiv@divisor+1,w
   944  00E7  1903               	btfsc	3,2
   945  00E8  28EA               	goto	u511
   946  00E9  28EB               	goto	u510
   947  00EA                     u511:
   948  00EA  2922               	goto	l1137
   949  00EB                     u510:
   950  00EB                     l1119:
   951  00EB  01A4               	clrf	___awdiv@counter
   952  00EC  0AA4               	incf	___awdiv@counter,f
   953  00ED  28F9               	goto	l1125
   954  00EE                     l1121:
   955  00EE  3001               	movlw	1
   956  00EF                     u525:
   957  00EF  1003               	clrc
   958  00F0  0DA0               	rlf	___awdiv@divisor,f
   959  00F1  0DA1               	rlf	___awdiv@divisor+1,f
   960  00F2  3EFF               	addlw	-1
   961  00F3  1D03               	skipz
   962  00F4  28EF               	goto	u525
   963  00F5                     l1123:
   964  00F5  3001               	movlw	1
   965  00F6  00F4               	movwf	??___awdiv
   966  00F7  0874               	movf	??___awdiv,w
   967  00F8  07A4               	addwf	___awdiv@counter,f
   968  00F9                     l1125:
   969  00F9  1FA1               	btfss	___awdiv@divisor+1,7
   970  00FA  28FC               	goto	u531
   971  00FB  28FD               	goto	u530
   972  00FC                     u531:
   973  00FC  28EE               	goto	l1121
   974  00FD                     u530:
   975  00FD                     l1127:
   976  00FD  3001               	movlw	1
   977  00FE                     u545:
   978  00FE  1003               	clrc
   979  00FF  0DA6               	rlf	___awdiv@quotient,f
   980  0100  0DA7               	rlf	___awdiv@quotient+1,f
   981  0101  3EFF               	addlw	-1
   982  0102  1D03               	skipz
   983  0103  28FE               	goto	u545
   984  0104  0821               	movf	___awdiv@divisor+1,w
   985  0105  0223               	subwf	___awdiv@dividend+1,w
   986  0106  1D03               	skipz
   987  0107  290A               	goto	u555
   988  0108  0820               	movf	___awdiv@divisor,w
   989  0109  0222               	subwf	___awdiv@dividend,w
   990  010A                     u555:
   991  010A  1C03               	skipc
   992  010B  290D               	goto	u551
   993  010C  290E               	goto	u550
   994  010D                     u551:
   995  010D  2915               	goto	l1133
   996  010E                     u550:
   997  010E                     l1129:
   998  010E  0820               	movf	___awdiv@divisor,w
   999  010F  02A2               	subwf	___awdiv@dividend,f
  1000  0110  0821               	movf	___awdiv@divisor+1,w
  1001  0111  1C03               	skipc
  1002  0112  03A3               	decf	___awdiv@dividend+1,f
  1003  0113  02A3               	subwf	___awdiv@dividend+1,f
  1004  0114                     l1131:
  1005  0114  1426               	bsf	___awdiv@quotient,0
  1006  0115                     l1133:
  1007  0115  3001               	movlw	1
  1008  0116                     u565:
  1009  0116  1003               	clrc
  1010  0117  0CA1               	rrf	___awdiv@divisor+1,f
  1011  0118  0CA0               	rrf	___awdiv@divisor,f
  1012  0119  3EFF               	addlw	-1
  1013  011A  1D03               	skipz
  1014  011B  2916               	goto	u565
  1015  011C                     l1135:
  1016  011C  3001               	movlw	1
  1017  011D  02A4               	subwf	___awdiv@counter,f
  1018  011E  1D03               	btfss	3,2
  1019  011F  2921               	goto	u571
  1020  0120  2922               	goto	u570
  1021  0121                     u571:
  1022  0121  28FD               	goto	l1127
  1023  0122                     u570:
  1024  0122                     l1137:
  1025  0122  0825               	movf	___awdiv@sign,w
  1026  0123  1903               	btfsc	3,2
  1027  0124  2926               	goto	u581
  1028  0125  2927               	goto	u580
  1029  0126                     u581:
  1030  0126  292C               	goto	l1141
  1031  0127                     u580:
  1032  0127                     l1139:
  1033  0127  09A6               	comf	___awdiv@quotient,f
  1034  0128  09A7               	comf	___awdiv@quotient+1,f
  1035  0129  0AA6               	incf	___awdiv@quotient,f
  1036  012A  1903               	skipnz
  1037  012B  0AA7               	incf	___awdiv@quotient+1,f
  1038  012C                     l1141:
  1039  012C  0827               	movf	___awdiv@quotient+1,w
  1040  012D  00A1               	movwf	?___awdiv+1
  1041  012E  0826               	movf	___awdiv@quotient,w
  1042  012F  00A0               	movwf	?___awdiv
  1043  0130                     l320:
  1044  0130  0008               	return
  1045  0131                     __end_of___awdiv:
  1046                           
  1047                           	psect	text3
  1048  0131                     __ptext3:	
  1049 ;; *************** function _isr *****************
  1050 ;; Defined at:
  1051 ;;		line 38 in file "Lab8.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         0       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0
  1067 ;;      Temps:          4       0       0       0       0
  1068 ;;      Totals:         4       0       0       0       0
  1069 ;;Total ram usage:        4 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		Interrupt level 1
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _isr
  1080  0131                     _isr:
  1081  0131                     i1l969:
  1082                           
  1083                           ;Lab8.c: 39:     if (ADIF){
  1084  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0133  1F0C               	btfss	12,6	;volatile
  1087  0134  2936               	goto	u44_21
  1088  0135  2937               	goto	u44_20
  1089  0136                     u44_21:
  1090  0136  2948               	goto	i1l979
  1091  0137                     u44_20:
  1092  0137                     i1l971:
  1093                           
  1094                           ;Lab8.c: 40:         if (ADCON0bits.CHS == 0){
  1095  0137  0C1F               	rrf	31,w	;volatile
  1096  0138  00F0               	movwf	??_isr
  1097  0139  0C70               	rrf	??_isr,w
  1098  013A  390F               	andlw	15
  1099  013B  3A00               	xorlw	0
  1100  013C  1D03               	skipz
  1101  013D  293F               	goto	u45_21
  1102  013E  2940               	goto	u45_20
  1103  013F                     u45_21:
  1104  013F  2943               	goto	i1l975
  1105  0140                     u45_20:
  1106  0140                     i1l973:
  1107                           
  1108                           ;Lab8.c: 41:             PORTB = ADRESH;
  1109  0140  081E               	movf	30,w	;volatile
  1110  0141  0086               	movwf	6	;volatile
  1111                           
  1112                           ;Lab8.c: 42:         }
  1113  0142  2947               	goto	i1l977
  1114  0143                     i1l975:
  1115                           
  1116                           ;Lab8.c: 44:             cont = ADRESH;
  1117  0143  081E               	movf	30,w	;volatile
  1118  0144  00F0               	movwf	??_isr
  1119  0145  0870               	movf	??_isr,w
  1120  0146  00F7               	movwf	_cont
  1121  0147                     i1l977:
  1122                           
  1123                           ;Lab8.c: 46:         PIR1bits.ADIF = 0;
  1124  0147  130C               	bcf	12,6	;volatile
  1125  0148                     i1l979:
  1126                           
  1127                           ;Lab8.c: 49:     if (T0IF) {
  1128  0148  1D0B               	btfss	11,2	;volatile
  1129  0149  294B               	goto	u46_21
  1130  014A  294C               	goto	u46_20
  1131  014B                     u46_21:
  1132  014B  298B               	goto	i1l70
  1133  014C                     u46_20:
  1134  014C  2978               	goto	i1l1009
  1135  014D                     i1l983:
  1136                           
  1137                           ;Lab8.c: 52:                 PORTD = 0x00;
  1138  014D  0188               	clrf	8	;volatile
  1139                           
  1140                           ;Lab8.c: 53:                 PORTC = 0x00;
  1141  014E  0187               	clrf	7	;volatile
  1142  014F                     i1l985:
  1143                           
  1144                           ;Lab8.c: 54:                 PORTD = 0x04;
  1145  014F  3004               	movlw	4
  1146  0150  0088               	movwf	8	;volatile
  1147  0151                     i1l987:
  1148                           
  1149                           ;Lab8.c: 55:                 PORTC = display[uni];
  1150  0151  0835               	movf	_uni,w
  1151  0152  3E2B               	addlw	(low (_display| 0))& (0+255)
  1152  0153  0084               	movwf	4
  1153  0154  1383               	bcf	3,7	;select IRP bank0
  1154  0155  0800               	movf	0,w
  1155  0156  0087               	movwf	7	;volatile
  1156  0157                     i1l989:
  1157                           
  1158                           ;Lab8.c: 56:                 disp = 1;
  1159  0157  3001               	movlw	1
  1160  0158  00F5               	movwf	_disp
  1161  0159  3000               	movlw	0
  1162  015A  00F6               	movwf	_disp+1
  1163                           
  1164                           ;Lab8.c: 57:                 break;
  1165  015B  2988               	goto	i1l67
  1166  015C                     i1l991:
  1167                           
  1168                           ;Lab8.c: 59:                 PORTD = 0x00;
  1169  015C  0188               	clrf	8	;volatile
  1170                           
  1171                           ;Lab8.c: 60:                 PORTC = 0x00;
  1172  015D  0187               	clrf	7	;volatile
  1173  015E                     i1l993:
  1174                           
  1175                           ;Lab8.c: 61:                 PORTD = 0x02;
  1176  015E  3002               	movlw	2
  1177  015F  0088               	movwf	8	;volatile
  1178  0160                     i1l995:
  1179                           
  1180                           ;Lab8.c: 62:                 PORTC = display[dec];
  1181  0160  0878               	movf	_dec,w
  1182  0161  3E2B               	addlw	(low (_display| 0))& (0+255)
  1183  0162  0084               	movwf	4
  1184  0163  1383               	bcf	3,7	;select IRP bank0
  1185  0164  0800               	movf	0,w
  1186  0165  0087               	movwf	7	;volatile
  1187  0166                     i1l997:
  1188                           
  1189                           ;Lab8.c: 63:                 disp = 2;
  1190  0166  3002               	movlw	2
  1191  0167  00F5               	movwf	_disp
  1192  0168  3000               	movlw	0
  1193  0169  00F6               	movwf	_disp+1
  1194                           
  1195                           ;Lab8.c: 64:                 break;
  1196  016A  2988               	goto	i1l67
  1197  016B                     i1l999:
  1198                           
  1199                           ;Lab8.c: 66:                 PORTD = 0x00;
  1200  016B  0188               	clrf	8	;volatile
  1201                           
  1202                           ;Lab8.c: 67:                 PORTC = 0x00;
  1203  016C  0187               	clrf	7	;volatile
  1204  016D                     i1l1001:
  1205                           
  1206                           ;Lab8.c: 68:                 PORTD = 0x01;
  1207  016D  3001               	movlw	1
  1208  016E  0088               	movwf	8	;volatile
  1209  016F                     i1l1003:
  1210                           
  1211                           ;Lab8.c: 69:                 PORTC = display[cen];
  1212  016F  0836               	movf	_cen,w
  1213  0170  3E2B               	addlw	(low (_display| 0))& (0+255)
  1214  0171  0084               	movwf	4
  1215  0172  1383               	bcf	3,7	;select IRP bank0
  1216  0173  0800               	movf	0,w
  1217  0174  0087               	movwf	7	;volatile
  1218  0175                     i1l1005:
  1219                           
  1220                           ;Lab8.c: 71:                 disp =0;
  1221  0175  01F5               	clrf	_disp
  1222  0176  01F6               	clrf	_disp+1
  1223                           
  1224                           ;Lab8.c: 72:                 break;
  1225  0177  2988               	goto	i1l67
  1226  0178                     i1l1009:
  1227                           
  1228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1229                           ; Switch size 1, requested type "simple"
  1230                           ; Number of cases is 1, Range of values is 0 to 0
  1231                           ; switch strategies available:
  1232                           ; Name         Instructions Cycles
  1233                           ; simple_byte            4     3 (average)
  1234                           ; direct_byte           11     8 (fixed)
  1235                           ; jumptable            260     6 (fixed)
  1236                           ;	Chosen strategy is simple_byte
  1237  0178  0876               	movf	_disp+1,w
  1238  0179  3A00               	xorlw	0	; case 0
  1239  017A  1903               	skipnz
  1240  017B  297D               	goto	i1l1267
  1241  017C  2988               	goto	i1l67
  1242  017D                     i1l1267:
  1243                           
  1244                           ; Switch size 1, requested type "simple"
  1245                           ; Number of cases is 3, Range of values is 0 to 2
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte           10     6 (average)
  1249                           ; direct_byte           17     8 (fixed)
  1250                           ; jumptable            260     6 (fixed)
  1251                           ;	Chosen strategy is simple_byte
  1252  017D  0875               	movf	_disp,w
  1253  017E  3A00               	xorlw	0	; case 0
  1254  017F  1903               	skipnz
  1255  0180  294D               	goto	i1l983
  1256  0181  3A01               	xorlw	1	; case 1
  1257  0182  1903               	skipnz
  1258  0183  295C               	goto	i1l991
  1259  0184  3A03               	xorlw	3	; case 2
  1260  0185  1903               	skipnz
  1261  0186  296B               	goto	i1l999
  1262  0187  2988               	goto	i1l67
  1263  0188                     i1l67:
  1264                           
  1265                           ;Lab8.c: 74:         INTCONbits.T0IF = 0;
  1266  0188  110B               	bcf	11,2	;volatile
  1267  0189                     i1l1011:
  1268                           
  1269                           ;Lab8.c: 75:         TMR0 = 178;
  1270  0189  30B2               	movlw	178
  1271  018A  0081               	movwf	1	;volatile
  1272  018B                     i1l70:
  1273  018B  0873               	movf	??_isr+3,w
  1274  018C  008A               	movwf	10
  1275  018D  0872               	movf	??_isr+2,w
  1276  018E  0084               	movwf	4
  1277  018F  0E71               	swapf	??_isr+1,w
  1278  0190  0083               	movwf	3
  1279  0191  0EFE               	swapf	btemp,f
  1280  0192  0E7E               	swapf	btemp,w
  1281  0193  0009               	retfie
  1282  0194                     __end_of_isr:
  1283  007E                     btemp	set	126	;btemp
  1284  007E                     wtemp0	set	126
  1285                           
  1286                           	psect	intentry
  1287  0004                     __pintentry:	
  1288                           ;incstack = 0
  1289                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1290                           
  1291  0004                     interrupt_function:
  1292  007E                     saved_w	set	btemp
  1293  0004  00FE               	movwf	btemp
  1294  0005  0E03               	swapf	3,w
  1295  0006  00F1               	movwf	??_isr+1
  1296  0007  0804               	movf	4,w
  1297  0008  00F2               	movwf	??_isr+2
  1298  0009  080A               	movf	10,w
  1299  000A  00F3               	movwf	??_isr+3
  1300  000B  120A  118A  2931   	ljmp	_isr
  1301                           
  1302                           	psect	config
  1303                           
  1304                           ;Config register CONFIG1 @ 0x2007
  1305                           ;	Oscillator Selection bits
  1306                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1307                           ;	Watchdog Timer Enable bit
  1308                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1309                           ;	Power-up Timer Enable bit
  1310                           ;	PWRTE = ON, PWRT enabled
  1311                           ;	RE3/MCLR pin function select bit
  1312                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1313                           ;	Code Protection bit
  1314                           ;	CP = OFF, Program memory code protection is disabled
  1315                           ;	Data Code Protection bit
  1316                           ;	CPD = OFF, Data memory code protection is disabled
  1317                           ;	Brown Out Reset Selection bits
  1318                           ;	BOREN = OFF, BOR disabled
  1319                           ;	Internal External Switchover bit
  1320                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1321                           ;	Fail-Safe Clock Monitor Enabled bit
  1322                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1323                           ;	Low Voltage Programming Enable bit
  1324                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1325                           ;	In-Circuit Debugger Mode bit
  1326                           ;	DEBUG = 0x1, unprogrammed default
  1327  2007                     	org	8199
  1328  2007  30C4               	dw	12484
  1329                           
  1330                           ;Config register CONFIG2 @ 0x2008
  1331                           ;	Brown-out Reset Selection bit
  1332                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1333                           ;	Flash Program Memory Self Write Enable bits
  1334                           ;	WRT = OFF, Write protection off
  1335  2008                     	org	8200
  1336  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         3
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     11      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _main->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 11:57:16 2021

                      pc 0002             ___awdiv@sign 0025                       fsr 0004  
                    l320 0130                      l333 01EE                      u500 00DA  
                    u501 00D9                      u510 00EB                      u511 00EA  
                    u600 01A6                      u601 01A5                      u530 00FD  
                    u610 01B1                      u531 00FC                      u611 01B0  
                    u525 00EF                      u550 010E                      u630 01C3  
                    u551 010D                      u631 01C2                      u640 01CD  
                    u545 00FE                      u641 01CC                      u625 01B5  
                    u570 0122                      u490 00CF                      u571 0121  
                    u555 010A                      u491 00CE                      u707 00BF  
                    u580 0127                      u660 01E0                      u581 0126  
                    u565 0116                      u661 01DF                      u645 01C9  
                    u670 01E5                      u590 019B                      u671 01E4  
                    u655 01D4                      u591 019A                      u680 00AB  
                    u681 00AA                      u690 00B4                      u691 00B3  
                    _dec 0078                      _cen 0036                      _isr 0131  
                    fsr0 0004                      _uni 0035                      indf 0000  
           ___awmod@sign 0025                     l1101 00C8                     l1111 00DA  
                   l1103 00CB                     l1121 00EE                     l1113 00DF  
                   l1105 00CF                     l1201 003D                     l1131 0114  
                   l1123 00F5                     l1115 00E3                     l1107 00D4  
                   l1211 0043                     l1203 003E                     l1141 012C  
                   l1133 0115                     l1125 00F9                     l1117 00E5  
                   l1109 00D6                     l1221 004A                     l1213 0046  
                   l1205 003F                     l1135 011C                     l1127 00FD  
                   l1119 00EB                     l1151 01A0                     l1231 007B  
                   l1223 004B                     l1215 0047                     l1207 0040  
                   l1129 010E                     l1137 0122                     l1161 01B4  
                   l1153 01A2                     l1145 0194                     l1241 00B9  
                   l1233 0091                     l1225 004C                     l1217 0048  
                   l1209 0042                     l1139 0127                     l1171 01D3  
                   l1163 01BB                     l1155 01A6                     l1147 0197  
                   l1243 00BB                     l1235 00A7                     l1227 004F  
                   l1219 0049                     l1173 01DA                     l1165 01BF  
                   l1157 01AB                     l1149 019B                     l1245 00C1  
                   l1237 00AB                     l1229 0065                     l1167 01C3  
                   l1159 01B1                     l1175 01E0                     l1239 00B4  
                   l1191 0034                     l1183 0026                     l1177 01E5  
                   l1169 01CD                     l1193 0036                     l1185 002A  
                   l1179 01EA                     l1195 003A                     l1187 002B  
                   l1197 003B                     l1189 0032                     l1199 003C  
                   _ADIF 0066                     ?_isr 0070                     _T0IF 005A  
                   i1l70 018B                     i1l67 0188                     _TMR0 0001  
                   _disp 0075                     _cont 0077                     _main 0026  
                   _val1 0079                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 0131  
        __end_of___awmod 01EF                    _ANSEL 0188          ___awdiv@divisor 0020  
                  i1l971 0137                    i1l973 0140                    i1l991 015C  
                  i1l983 014D                    i1l975 0143                    i1l993 015E  
                  i1l985 014F                    i1l977 0147                    i1l969 0131  
                  i1l995 0160                    i1l987 0151                    i1l979 0148  
                  i1l997 0166                    i1l989 0157                    i1l999 016B  
        ___awdiv@counter 0024                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u44_20 0137                    u44_21 0136  
                  u45_20 0140                    u45_21 013F                    u46_20 014C  
                  u46_21 014B                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 00C8                   ??_main 0028                   _ADRESH 001E  
       ___awdiv@dividend 0022                   _ANSELH 0189                   i1l1001 016D  
                 i1l1011 0189                   i1l1003 016F                   i1l1005 0175  
                 i1l1009 0178                   i1l1267 017D                   _OSCCON 008F  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0026  
        ___awmod@divisor 0020          ___awmod@counter 0024                   saved_w 007E  
__end_of__initialization 0022           __pcstackCOMMON 0070             __pidataBANK0 0202  
             __pnvCOMMON 0078               __pmaintext 0026               __pintentry 0004  
                ___awdiv 00C8                  ___awmod 0194                  __ptext1 0194  
                __ptext2 00C8                  __ptext3 0131                  _display 002B  
           __size_of_isr 0063         ___awmod@dividend 0022     end_of_initialization 0022  
    start_initialization 0011              __end_of_isr 0194               init_fetch0 01EF  
            __pdataBANK0 002B              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 0035                 ?___awdiv 0020  
               ?___awmod 0020        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___awdiv 0069         __size_of___awmod 005B            __size_of_main 00A2  
             _INTCONbits 000B                 init_ram0 01F3                 intlevel1 0000  
             _OPTION_REG 0081  
