

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 27 15:01:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213  01E4                     __pidataBANK0:
   214                           
   215                           ;initializer for _display
   216  01E4  343F               	retlw	63
   217  01E5  3406               	retlw	6
   218  01E6  345B               	retlw	91
   219  01E7  344F               	retlw	79
   220  01E8  3466               	retlw	102
   221  01E9  346D               	retlw	109
   222  01EA  347D               	retlw	125
   223  01EB  3447               	retlw	71
   224  01EC  347F               	retlw	127
   225  01ED  3467               	retlw	103
   226                           
   227                           	psect	nvCOMMON
   228  0078                     __pnvCOMMON:
   229  0078                     _dec:
   230  0078                     	ds	1
   231  0079                     _val1:
   232  0079                     	ds	1
   233                           
   234                           	psect	nvBANK0
   235  0035                     __pnvBANK0:
   236  0035                     _uni:
   237  0035                     	ds	1
   238  0036                     _cen:
   239  0036                     	ds	1
   240  0005                     _PORTA	set	5
   241  0001                     _TMR0	set	1
   242  0007                     _PORTC	set	7
   243  0008                     _PORTD	set	8
   244  000B                     _INTCONbits	set	11
   245  005A                     _T0IF	set	90
   246  0031                     _RB1	set	49
   247  0030                     _RB0	set	48
   248  0058                     _RBIF	set	88
   249  0096                     _IOCB	set	150
   250  0081                     _OPTION_REG	set	129
   251  008F                     _OSCCON	set	143
   252  0088                     _TRISD	set	136
   253  0087                     _TRISC	set	135
   254  0086                     _TRISB	set	134
   255  0085                     _TRISA	set	133
   256  0189                     _ANSELH	set	393
   257  0188                     _ANSEL	set	392
   258                           
   259                           	psect	cinit
   260  0011                     start_initialization:	
   261                           ; #config settings
   262                           
   263  0011                     __initialization:
   264                           
   265                           ; Initialize objects allocated to BANK0
   266  0011  1383               	bcf	3,7	;select IRP bank0
   267  0012  3035               	movlw	low (__pdataBANK0+10)
   268  0013  00FD               	movwf	btemp+-1
   269  0014  3001               	movlw	high __pidataBANK0
   270  0015  00FE               	movwf	btemp
   271  0016  30E4               	movlw	low __pidataBANK0
   272  0017  00FF               	movwf	btemp+1
   273  0018  302B               	movlw	low __pdataBANK0
   274  0019  0084               	movwf	4
   275  001A  120A  118A  21D5  120A  118A  	fcall	init_ram0
   276                           
   277                           ; Clear objects allocated to COMMON
   278  001F  01F5               	clrf	__pbssCOMMON& (0+127)
   279  0020  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   280  0021  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   281  0022                     end_of_initialization:	
   282                           ;End of C runtime variable initialization code
   283                           
   284  0022                     __end_of__initialization:
   285  0022  0183               	clrf	3
   286  0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   287                           
   288                           	psect	bssCOMMON
   289  0075                     __pbssCOMMON:
   290  0075                     _disp:
   291  0075                     	ds	2
   292  0077                     _cont:
   293  0077                     	ds	1
   294                           
   295                           	psect	dataBANK0
   296  002B                     __pdataBANK0:
   297  002B                     _display:
   298  002B                     	ds	10
   299                           
   300                           	psect	inittext
   301  01D1                     init_fetch0:	
   302                           ;	Called with low address in FSR and high address in W
   303                           
   304  01D1  087E               	movf	btemp,w
   305  01D2  008A               	movwf	10
   306  01D3  087F               	movf	btemp+1,w
   307  01D4  0082               	movwf	2
   308  01D5                     init_ram0:	
   309                           ;Called with:
   310                           ;	high address of idata address in btemp 
   311                           ;	low address of idata address in btemp+1 
   312                           ;	low address of data in FSR
   313                           ;	high address + 1 of data in btemp-1
   314                           
   315  01D5  120A  118A  21D1  120A  118A  	fcall	init_fetch0
   316  01DA  0080               	movwf	0
   317  01DB  0A84               	incf	4,f
   318  01DC  0804               	movf	4,w
   319  01DD  067D               	xorwf	btemp+-1,w
   320  01DE  1903               	btfsc	3,2
   321  01DF  3400               	retlw	0
   322  01E0  0AFF               	incf	btemp+1,f
   323  01E1  1903               	btfsc	3,2
   324  01E2  0AFE               	incf	btemp,f
   325  01E3  29D5               	goto	init_ram0
   326                           
   327                           	psect	cstackCOMMON
   328  0070                     __pcstackCOMMON:
   329  0070                     ?_isr:
   330  0070                     ??_isr:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_main:	
   334                           ; 1 bytes @ 0x0
   335                           
   336                           
   337                           ; 1 bytes @ 0x0
   338  0070                     	ds	4
   339  0074                     ??___awdiv:
   340  0074                     ??___awmod:	
   341                           ; 1 bytes @ 0x4
   342                           
   343                           
   344                           ; 1 bytes @ 0x4
   345  0074                     	ds	1
   346                           
   347                           	psect	cstackBANK0
   348  0020                     __pcstackBANK0:
   349  0020                     ?___awdiv:
   350  0020                     ?___awmod:	
   351                           ; 2 bytes @ 0x0
   352                           
   353  0020                     ___awdiv@divisor:	
   354                           ; 2 bytes @ 0x0
   355                           
   356  0020                     ___awmod@divisor:	
   357                           ; 2 bytes @ 0x0
   358                           
   359                           
   360                           ; 2 bytes @ 0x0
   361  0020                     	ds	2
   362  0022                     ___awdiv@dividend:
   363  0022                     ___awmod@dividend:	
   364                           ; 2 bytes @ 0x2
   365                           
   366                           
   367                           ; 2 bytes @ 0x2
   368  0022                     	ds	2
   369  0024                     ___awdiv@counter:
   370  0024                     ___awmod@counter:	
   371                           ; 1 bytes @ 0x4
   372                           
   373                           
   374                           ; 1 bytes @ 0x4
   375  0024                     	ds	1
   376  0025                     ___awdiv@sign:
   377  0025                     ___awmod@sign:	
   378                           ; 1 bytes @ 0x5
   379                           
   380                           
   381                           ; 1 bytes @ 0x5
   382  0025                     	ds	1
   383  0026                     ___awdiv@quotient:
   384                           
   385                           ; 2 bytes @ 0x6
   386  0026                     	ds	2
   387  0028                     ??_main:
   388                           
   389                           ; 1 bytes @ 0x8
   390  0028                     	ds	3
   391                           
   392                           	psect	maintext
   393  0026                     __pmaintext:	
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 79 in file "Lab7.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0, pclath, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : B00/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          0       3       0       0       0
   416 ;;      Totals:         0       3       0       0       0
   417 ;;Total ram usage:        3 bytes
   418 ;; Hardware stack levels required when called:    2
   419 ;; This function calls:
   420 ;;		___awdiv
   421 ;;		___awmod
   422 ;; This function is called by:
   423 ;;		Startup code after reset
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           
   428                           ;psect for function _main
   429  0026                     _main:
   430  0026                     l1127:	
   431                           ;incstack = 0
   432                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   433                           
   434                           
   435                           ;Lab7.c: 80:     ANSEL = 0x00;
   436  0026  1683               	bsf	3,5	;RP0=1, select bank3
   437  0027  1703               	bsf	3,6	;RP1=1, select bank3
   438  0028  0188               	clrf	8	;volatile
   439                           
   440                           ;Lab7.c: 81:     ANSELH = 0x00;
   441  0029  0189               	clrf	9	;volatile
   442                           
   443                           ;Lab7.c: 83:     TRISA = 0x00;
   444  002A  1683               	bsf	3,5	;RP0=1, select bank1
   445  002B  1303               	bcf	3,6	;RP1=0, select bank1
   446  002C  0185               	clrf	5	;volatile
   447  002D                     l1129:
   448                           
   449                           ;Lab7.c: 84:     TRISB = 0x03;
   450  002D  3003               	movlw	3
   451  002E  0086               	movwf	6	;volatile
   452  002F                     l1131:
   453                           
   454                           ;Lab7.c: 85:     TRISC = 0x00;
   455  002F  0187               	clrf	7	;volatile
   456  0030                     l1133:
   457                           
   458                           ;Lab7.c: 86:     TRISD = 0x00;
   459  0030  0188               	clrf	8	;volatile
   460  0031                     l1135:
   461                           
   462                           ;Lab7.c: 88:     OSCCON = 0B0110111;
   463  0031  3037               	movlw	55
   464  0032  008F               	movwf	15	;volatile
   465  0033                     l1137:
   466                           
   467                           ;Lab7.c: 89:     OPTION_REG = 0B01000011;
   468  0033  3043               	movlw	67
   469  0034  0081               	movwf	1	;volatile
   470  0035                     l1139:
   471                           
   472                           ;Lab7.c: 90:     TMR0 = 217;
   473  0035  30D9               	movlw	217
   474  0036  1283               	bcf	3,5	;RP0=0, select bank0
   475  0037  1303               	bcf	3,6	;RP1=0, select bank0
   476  0038  0081               	movwf	1	;volatile
   477  0039                     l1141:
   478                           
   479                           ;Lab7.c: 91:     IOCB = 0x03;
   480  0039  3003               	movlw	3
   481  003A  1683               	bsf	3,5	;RP0=1, select bank1
   482  003B  1303               	bcf	3,6	;RP1=0, select bank1
   483  003C  0096               	movwf	22	;volatile
   484  003D                     l1143:
   485                           
   486                           ;Lab7.c: 93:     PORTA = 0x00;
   487  003D  1283               	bcf	3,5	;RP0=0, select bank0
   488  003E  1303               	bcf	3,6	;RP1=0, select bank0
   489  003F  0185               	clrf	5	;volatile
   490  0040                     l1145:
   491                           
   492                           ;Lab7.c: 94:     PORTC = 0x00;
   493  0040  0187               	clrf	7	;volatile
   494  0041                     l1147:
   495                           
   496                           ;Lab7.c: 95:     PORTD = 0X00;
   497  0041  0188               	clrf	8	;volatile
   498  0042                     l1149:
   499                           
   500                           ;Lab7.c: 96:     cont = 0;
   501  0042  01F7               	clrf	_cont
   502  0043                     l1151:
   503                           
   504                           ;Lab7.c: 98:     INTCONbits.GIE = 1;
   505  0043  178B               	bsf	11,7	;volatile
   506  0044                     l1153:
   507                           
   508                           ;Lab7.c: 99:     INTCONbits.T0IE = 1;
   509  0044  168B               	bsf	11,5	;volatile
   510  0045                     l1155:
   511                           
   512                           ;Lab7.c: 100:     INTCONbits.RBIE = 1;
   513  0045  158B               	bsf	11,3	;volatile
   514  0046                     l1157:
   515                           
   516                           ;Lab7.c: 104:         cen = cont/100;
   517  0046  3064               	movlw	100
   518  0047  00A0               	movwf	___awdiv@divisor
   519  0048  3000               	movlw	0
   520  0049  00A1               	movwf	___awdiv@divisor+1
   521  004A  0877               	movf	_cont,w
   522  004B  00A8               	movwf	??_main
   523  004C  01A9               	clrf	??_main+1
   524  004D  0828               	movf	??_main,w
   525  004E  00A2               	movwf	___awdiv@dividend
   526  004F  0829               	movf	??_main+1,w
   527  0050  00A3               	movwf	___awdiv@dividend+1
   528  0051  120A  118A  210D  120A  118A  	fcall	___awdiv
   529  0056  1283               	bcf	3,5	;RP0=0, select bank0
   530  0057  1303               	bcf	3,6	;RP1=0, select bank0
   531  0058  0820               	movf	?___awdiv,w
   532  0059  00AA               	movwf	??_main+2
   533  005A  082A               	movf	??_main+2,w
   534  005B  00B6               	movwf	_cen
   535  005C                     l1159:
   536                           
   537                           ;Lab7.c: 105:         val1 = cont%100;
   538  005C  3064               	movlw	100
   539  005D  00A0               	movwf	___awmod@divisor
   540  005E  3000               	movlw	0
   541  005F  00A1               	movwf	___awmod@divisor+1
   542  0060  0877               	movf	_cont,w
   543  0061  00A8               	movwf	??_main
   544  0062  01A9               	clrf	??_main+1
   545  0063  0828               	movf	??_main,w
   546  0064  00A2               	movwf	___awmod@dividend
   547  0065  0829               	movf	??_main+1,w
   548  0066  00A3               	movwf	___awmod@dividend+1
   549  0067  120A  118A  2176  120A  118A  	fcall	___awmod
   550  006C  1283               	bcf	3,5	;RP0=0, select bank0
   551  006D  1303               	bcf	3,6	;RP1=0, select bank0
   552  006E  0820               	movf	?___awmod,w
   553  006F  00AA               	movwf	??_main+2
   554  0070  082A               	movf	??_main+2,w
   555  0071  00F9               	movwf	_val1
   556  0072                     l1161:
   557                           
   558                           ;Lab7.c: 106:         dec = val1/10;
   559  0072  300A               	movlw	10
   560  0073  00A0               	movwf	___awdiv@divisor
   561  0074  3000               	movlw	0
   562  0075  00A1               	movwf	___awdiv@divisor+1
   563  0076  0879               	movf	_val1,w
   564  0077  00A8               	movwf	??_main
   565  0078  01A9               	clrf	??_main+1
   566  0079  0828               	movf	??_main,w
   567  007A  00A2               	movwf	___awdiv@dividend
   568  007B  0829               	movf	??_main+1,w
   569  007C  00A3               	movwf	___awdiv@dividend+1
   570  007D  120A  118A  210D  120A  118A  	fcall	___awdiv
   571  0082  1283               	bcf	3,5	;RP0=0, select bank0
   572  0083  1303               	bcf	3,6	;RP1=0, select bank0
   573  0084  0820               	movf	?___awdiv,w
   574  0085  00AA               	movwf	??_main+2
   575  0086  082A               	movf	??_main+2,w
   576  0087  00F8               	movwf	_dec
   577  0088                     l1163:
   578                           
   579                           ;Lab7.c: 107:         uni = val1%10;
   580  0088  300A               	movlw	10
   581  0089  00A0               	movwf	___awmod@divisor
   582  008A  3000               	movlw	0
   583  008B  00A1               	movwf	___awmod@divisor+1
   584  008C  0879               	movf	_val1,w
   585  008D  00A8               	movwf	??_main
   586  008E  01A9               	clrf	??_main+1
   587  008F  0828               	movf	??_main,w
   588  0090  00A2               	movwf	___awmod@dividend
   589  0091  0829               	movf	??_main+1,w
   590  0092  00A3               	movwf	___awmod@dividend+1
   591  0093  120A  118A  2176  120A  118A  	fcall	___awmod
   592  0098  1283               	bcf	3,5	;RP0=0, select bank0
   593  0099  1303               	bcf	3,6	;RP1=0, select bank0
   594  009A  0820               	movf	?___awmod,w
   595  009B  00AA               	movwf	??_main+2
   596  009C  082A               	movf	??_main+2,w
   597  009D  00B5               	movwf	_uni
   598  009E  2846               	goto	l1157
   599  009F  120A  118A  280E   	ljmp	start
   600  00A2                     __end_of_main:
   601                           
   602                           	psect	text1
   603  0176                     __ptext1:	
   604 ;; *************** function ___awmod *****************
   605 ;; Defined at:
   606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  divisor         2    0[BANK0 ] int 
   609 ;;  dividend        2    2[BANK0 ] int 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  sign            1    5[BANK0 ] unsigned char 
   612 ;;  counter         1    4[BANK0 ] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  2    0[BANK0 ] int 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       4       0       0       0
   623 ;;      Locals:         0       2       0       0       0
   624 ;;      Temps:          1       0       0       0       0
   625 ;;      Totals:         1       6       0       0       0
   626 ;;Total ram usage:        7 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function ___awmod
   638  0176                     ___awmod:
   639  0176                     l1089:	
   640                           ;incstack = 0
   641                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   642                           
   643  0176  1283               	bcf	3,5	;RP0=0, select bank0
   644  0177  1303               	bcf	3,6	;RP1=0, select bank0
   645  0178  01A5               	clrf	___awmod@sign
   646  0179                     l1091:
   647  0179  1FA3               	btfss	___awmod@dividend+1,7
   648  017A  297C               	goto	u571
   649  017B  297D               	goto	u570
   650  017C                     u571:
   651  017C  2984               	goto	l1097
   652  017D                     u570:
   653  017D                     l1093:
   654  017D  09A2               	comf	___awmod@dividend,f
   655  017E  09A3               	comf	___awmod@dividend+1,f
   656  017F  0AA2               	incf	___awmod@dividend,f
   657  0180  1903               	skipnz
   658  0181  0AA3               	incf	___awmod@dividend+1,f
   659  0182                     l1095:
   660  0182  01A5               	clrf	___awmod@sign
   661  0183  0AA5               	incf	___awmod@sign,f
   662  0184                     l1097:
   663  0184  1FA1               	btfss	___awmod@divisor+1,7
   664  0185  2987               	goto	u581
   665  0186  2988               	goto	u580
   666  0187                     u581:
   667  0187  298D               	goto	l1101
   668  0188                     u580:
   669  0188                     l1099:
   670  0188  09A0               	comf	___awmod@divisor,f
   671  0189  09A1               	comf	___awmod@divisor+1,f
   672  018A  0AA0               	incf	___awmod@divisor,f
   673  018B  1903               	skipnz
   674  018C  0AA1               	incf	___awmod@divisor+1,f
   675  018D                     l1101:
   676  018D  0820               	movf	___awmod@divisor,w
   677  018E  0421               	iorwf	___awmod@divisor+1,w
   678  018F  1903               	btfsc	3,2
   679  0190  2992               	goto	u591
   680  0191  2993               	goto	u590
   681  0192                     u591:
   682  0192  29C2               	goto	l1119
   683  0193                     u590:
   684  0193                     l1103:
   685  0193  01A4               	clrf	___awmod@counter
   686  0194  0AA4               	incf	___awmod@counter,f
   687  0195  29A1               	goto	l1109
   688  0196                     l1105:
   689  0196  3001               	movlw	1
   690  0197                     u605:
   691  0197  1003               	clrc
   692  0198  0DA0               	rlf	___awmod@divisor,f
   693  0199  0DA1               	rlf	___awmod@divisor+1,f
   694  019A  3EFF               	addlw	-1
   695  019B  1D03               	skipz
   696  019C  2997               	goto	u605
   697  019D                     l1107:
   698  019D  3001               	movlw	1
   699  019E  00F4               	movwf	??___awmod
   700  019F  0874               	movf	??___awmod,w
   701  01A0  07A4               	addwf	___awmod@counter,f
   702  01A1                     l1109:
   703  01A1  1FA1               	btfss	___awmod@divisor+1,7
   704  01A2  29A4               	goto	u611
   705  01A3  29A5               	goto	u610
   706  01A4                     u611:
   707  01A4  2996               	goto	l1105
   708  01A5                     u610:
   709  01A5                     l1111:
   710  01A5  0821               	movf	___awmod@divisor+1,w
   711  01A6  0223               	subwf	___awmod@dividend+1,w
   712  01A7  1D03               	skipz
   713  01A8  29AB               	goto	u625
   714  01A9  0820               	movf	___awmod@divisor,w
   715  01AA  0222               	subwf	___awmod@dividend,w
   716  01AB                     u625:
   717  01AB  1C03               	skipc
   718  01AC  29AE               	goto	u621
   719  01AD  29AF               	goto	u620
   720  01AE                     u621:
   721  01AE  29B5               	goto	l1115
   722  01AF                     u620:
   723  01AF                     l1113:
   724  01AF  0820               	movf	___awmod@divisor,w
   725  01B0  02A2               	subwf	___awmod@dividend,f
   726  01B1  0821               	movf	___awmod@divisor+1,w
   727  01B2  1C03               	skipc
   728  01B3  03A3               	decf	___awmod@dividend+1,f
   729  01B4  02A3               	subwf	___awmod@dividend+1,f
   730  01B5                     l1115:
   731  01B5  3001               	movlw	1
   732  01B6                     u635:
   733  01B6  1003               	clrc
   734  01B7  0CA1               	rrf	___awmod@divisor+1,f
   735  01B8  0CA0               	rrf	___awmod@divisor,f
   736  01B9  3EFF               	addlw	-1
   737  01BA  1D03               	skipz
   738  01BB  29B6               	goto	u635
   739  01BC                     l1117:
   740  01BC  3001               	movlw	1
   741  01BD  02A4               	subwf	___awmod@counter,f
   742  01BE  1D03               	btfss	3,2
   743  01BF  29C1               	goto	u641
   744  01C0  29C2               	goto	u640
   745  01C1                     u641:
   746  01C1  29A5               	goto	l1111
   747  01C2                     u640:
   748  01C2                     l1119:
   749  01C2  0825               	movf	___awmod@sign,w
   750  01C3  1903               	btfsc	3,2
   751  01C4  29C6               	goto	u651
   752  01C5  29C7               	goto	u650
   753  01C6                     u651:
   754  01C6  29CC               	goto	l1123
   755  01C7                     u650:
   756  01C7                     l1121:
   757  01C7  09A2               	comf	___awmod@dividend,f
   758  01C8  09A3               	comf	___awmod@dividend+1,f
   759  01C9  0AA2               	incf	___awmod@dividend,f
   760  01CA  1903               	skipnz
   761  01CB  0AA3               	incf	___awmod@dividend+1,f
   762  01CC                     l1123:
   763  01CC  0823               	movf	___awmod@dividend+1,w
   764  01CD  00A1               	movwf	?___awmod+1
   765  01CE  0822               	movf	___awmod@dividend,w
   766  01CF  00A0               	movwf	?___awmod
   767  01D0                     l325:
   768  01D0  0008               	return
   769  01D1                     __end_of___awmod:
   770                           
   771                           	psect	text2
   772  010D                     __ptext2:	
   773 ;; *************** function ___awdiv *****************
   774 ;; Defined at:
   775 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  divisor         2    0[BANK0 ] int 
   778 ;;  dividend        2    2[BANK0 ] int 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  quotient        2    6[BANK0 ] int 
   781 ;;  sign            1    5[BANK0 ] unsigned char 
   782 ;;  counter         1    4[BANK0 ] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  2    0[BANK0 ] int 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       4       0       0       0
   793 ;;      Locals:         0       4       0       0       0
   794 ;;      Temps:          1       0       0       0       0
   795 ;;      Totals:         1       8       0       0       0
   796 ;;Total ram usage:        9 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           
   807                           ;psect for function ___awdiv
   808  010D                     ___awdiv:
   809  010D                     l1045:	
   810                           ;incstack = 0
   811                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   812                           
   813  010D  1283               	bcf	3,5	;RP0=0, select bank0
   814  010E  1303               	bcf	3,6	;RP1=0, select bank0
   815  010F  01A5               	clrf	___awdiv@sign
   816  0110                     l1047:
   817  0110  1FA1               	btfss	___awdiv@divisor+1,7
   818  0111  2913               	goto	u471
   819  0112  2914               	goto	u470
   820  0113                     u471:
   821  0113  291B               	goto	l1053
   822  0114                     u470:
   823  0114                     l1049:
   824  0114  09A0               	comf	___awdiv@divisor,f
   825  0115  09A1               	comf	___awdiv@divisor+1,f
   826  0116  0AA0               	incf	___awdiv@divisor,f
   827  0117  1903               	skipnz
   828  0118  0AA1               	incf	___awdiv@divisor+1,f
   829  0119                     l1051:
   830  0119  01A5               	clrf	___awdiv@sign
   831  011A  0AA5               	incf	___awdiv@sign,f
   832  011B                     l1053:
   833  011B  1FA3               	btfss	___awdiv@dividend+1,7
   834  011C  291E               	goto	u481
   835  011D  291F               	goto	u480
   836  011E                     u481:
   837  011E  2928               	goto	l1059
   838  011F                     u480:
   839  011F                     l1055:
   840  011F  09A2               	comf	___awdiv@dividend,f
   841  0120  09A3               	comf	___awdiv@dividend+1,f
   842  0121  0AA2               	incf	___awdiv@dividend,f
   843  0122  1903               	skipnz
   844  0123  0AA3               	incf	___awdiv@dividend+1,f
   845  0124                     l1057:
   846  0124  3001               	movlw	1
   847  0125  00F4               	movwf	??___awdiv
   848  0126  0874               	movf	??___awdiv,w
   849  0127  06A5               	xorwf	___awdiv@sign,f
   850  0128                     l1059:
   851  0128  01A6               	clrf	___awdiv@quotient
   852  0129  01A7               	clrf	___awdiv@quotient+1
   853  012A                     l1061:
   854  012A  0820               	movf	___awdiv@divisor,w
   855  012B  0421               	iorwf	___awdiv@divisor+1,w
   856  012C  1903               	btfsc	3,2
   857  012D  292F               	goto	u491
   858  012E  2930               	goto	u490
   859  012F                     u491:
   860  012F  2967               	goto	l1081
   861  0130                     u490:
   862  0130                     l1063:
   863  0130  01A4               	clrf	___awdiv@counter
   864  0131  0AA4               	incf	___awdiv@counter,f
   865  0132  293E               	goto	l1069
   866  0133                     l1065:
   867  0133  3001               	movlw	1
   868  0134                     u505:
   869  0134  1003               	clrc
   870  0135  0DA0               	rlf	___awdiv@divisor,f
   871  0136  0DA1               	rlf	___awdiv@divisor+1,f
   872  0137  3EFF               	addlw	-1
   873  0138  1D03               	skipz
   874  0139  2934               	goto	u505
   875  013A                     l1067:
   876  013A  3001               	movlw	1
   877  013B  00F4               	movwf	??___awdiv
   878  013C  0874               	movf	??___awdiv,w
   879  013D  07A4               	addwf	___awdiv@counter,f
   880  013E                     l1069:
   881  013E  1FA1               	btfss	___awdiv@divisor+1,7
   882  013F  2941               	goto	u511
   883  0140  2942               	goto	u510
   884  0141                     u511:
   885  0141  2933               	goto	l1065
   886  0142                     u510:
   887  0142                     l1071:
   888  0142  3001               	movlw	1
   889  0143                     u525:
   890  0143  1003               	clrc
   891  0144  0DA6               	rlf	___awdiv@quotient,f
   892  0145  0DA7               	rlf	___awdiv@quotient+1,f
   893  0146  3EFF               	addlw	-1
   894  0147  1D03               	skipz
   895  0148  2943               	goto	u525
   896  0149  0821               	movf	___awdiv@divisor+1,w
   897  014A  0223               	subwf	___awdiv@dividend+1,w
   898  014B  1D03               	skipz
   899  014C  294F               	goto	u535
   900  014D  0820               	movf	___awdiv@divisor,w
   901  014E  0222               	subwf	___awdiv@dividend,w
   902  014F                     u535:
   903  014F  1C03               	skipc
   904  0150  2952               	goto	u531
   905  0151  2953               	goto	u530
   906  0152                     u531:
   907  0152  295A               	goto	l1077
   908  0153                     u530:
   909  0153                     l1073:
   910  0153  0820               	movf	___awdiv@divisor,w
   911  0154  02A2               	subwf	___awdiv@dividend,f
   912  0155  0821               	movf	___awdiv@divisor+1,w
   913  0156  1C03               	skipc
   914  0157  03A3               	decf	___awdiv@dividend+1,f
   915  0158  02A3               	subwf	___awdiv@dividend+1,f
   916  0159                     l1075:
   917  0159  1426               	bsf	___awdiv@quotient,0
   918  015A                     l1077:
   919  015A  3001               	movlw	1
   920  015B                     u545:
   921  015B  1003               	clrc
   922  015C  0CA1               	rrf	___awdiv@divisor+1,f
   923  015D  0CA0               	rrf	___awdiv@divisor,f
   924  015E  3EFF               	addlw	-1
   925  015F  1D03               	skipz
   926  0160  295B               	goto	u545
   927  0161                     l1079:
   928  0161  3001               	movlw	1
   929  0162  02A4               	subwf	___awdiv@counter,f
   930  0163  1D03               	btfss	3,2
   931  0164  2966               	goto	u551
   932  0165  2967               	goto	u550
   933  0166                     u551:
   934  0166  2942               	goto	l1071
   935  0167                     u550:
   936  0167                     l1081:
   937  0167  0825               	movf	___awdiv@sign,w
   938  0168  1903               	btfsc	3,2
   939  0169  296B               	goto	u561
   940  016A  296C               	goto	u560
   941  016B                     u561:
   942  016B  2971               	goto	l1085
   943  016C                     u560:
   944  016C                     l1083:
   945  016C  09A6               	comf	___awdiv@quotient,f
   946  016D  09A7               	comf	___awdiv@quotient+1,f
   947  016E  0AA6               	incf	___awdiv@quotient,f
   948  016F  1903               	skipnz
   949  0170  0AA7               	incf	___awdiv@quotient+1,f
   950  0171                     l1085:
   951  0171  0827               	movf	___awdiv@quotient+1,w
   952  0172  00A1               	movwf	?___awdiv+1
   953  0173  0826               	movf	___awdiv@quotient,w
   954  0174  00A0               	movwf	?___awdiv
   955  0175                     l312:
   956  0175  0008               	return
   957  0176                     __end_of___awdiv:
   958                           
   959                           	psect	text3
   960  00A2                     __ptext3:	
   961 ;; *************** function _isr *****************
   962 ;; Defined at:
   963 ;;		line 37 in file "Lab7.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   977 ;;      Params:         0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0
   979 ;;      Temps:          4       0       0       0       0
   980 ;;      Totals:         4       0       0       0       0
   981 ;;Total ram usage:        4 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		Interrupt level 1
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           
   991                           ;psect for function _isr
   992  00A2                     _isr:
   993  00A2                     i1l937:
   994                           
   995                           ;Lab7.c: 38:     if (RBIF){
   996  00A2  1C0B               	btfss	11,0	;volatile
   997  00A3  28A5               	goto	u43_21
   998  00A4  28A6               	goto	u43_20
   999  00A5                     u43_21:
  1000  00A5  28B9               	goto	i1l949
  1001  00A6                     u43_20:
  1002  00A6                     i1l939:
  1003                           
  1004                           ;Lab7.c: 39:         if (RB0==0){
  1005  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1006  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1007  00A8  1806               	btfsc	6,0	;volatile
  1008  00A9  28AB               	goto	u44_21
  1009  00AA  28AC               	goto	u44_20
  1010  00AB                     u44_21:
  1011  00AB  28B2               	goto	i1l56
  1012  00AC                     u44_20:
  1013  00AC                     i1l941:
  1014                           
  1015                           ;Lab7.c: 40:             cont++;
  1016  00AC  3001               	movlw	1
  1017  00AD  00F0               	movwf	??_isr
  1018  00AE  0870               	movf	??_isr,w
  1019  00AF  07F7               	addwf	_cont,f
  1020  00B0                     i1l943:
  1021                           
  1022                           ;Lab7.c: 41:             INTCONbits.RBIF = 0;
  1023  00B0  100B               	bcf	11,0	;volatile
  1024                           
  1025                           ;Lab7.c: 42:     }
  1026  00B1  28B9               	goto	i1l949
  1027  00B2                     i1l56:	
  1028                           ;Lab7.c: 43:         else if (RB1==0) {
  1029                           
  1030  00B2  1886               	btfsc	6,1	;volatile
  1031  00B3  28B5               	goto	u45_21
  1032  00B4  28B6               	goto	u45_20
  1033  00B5                     u45_21:
  1034  00B5  28B9               	goto	i1l949
  1035  00B6                     u45_20:
  1036  00B6                     i1l945:
  1037                           
  1038                           ;Lab7.c: 44:             cont--;
  1039  00B6  3001               	movlw	1
  1040  00B7  02F7               	subwf	_cont,f
  1041  00B8                     i1l947:
  1042                           
  1043                           ;Lab7.c: 45:             INTCONbits.RBIF = 0;
  1044  00B8  100B               	bcf	11,0	;volatile
  1045  00B9                     i1l949:
  1046                           
  1047                           ;Lab7.c: 48:     if (T0IF) {
  1048  00B9  1D0B               	btfss	11,2	;volatile
  1049  00BA  28BC               	goto	u46_21
  1050  00BB  28BD               	goto	u46_20
  1051  00BC                     u46_21:
  1052  00BC  2904               	goto	i1l65
  1053  00BD                     u46_20:
  1054  00BD  28EF               	goto	i1l979
  1055  00BE                     i1l953:
  1056                           
  1057                           ;Lab7.c: 51:                 PORTD = 0x00;
  1058  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1059  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1060  00C0  0188               	clrf	8	;volatile
  1061                           
  1062                           ;Lab7.c: 52:                 PORTC = 0x00;
  1063  00C1  0187               	clrf	7	;volatile
  1064  00C2                     i1l955:
  1065                           
  1066                           ;Lab7.c: 53:                 PORTD = 0x04;
  1067  00C2  3004               	movlw	4
  1068  00C3  0088               	movwf	8	;volatile
  1069  00C4                     i1l957:
  1070                           
  1071                           ;Lab7.c: 54:                 PORTC = display[uni];
  1072  00C4  0835               	movf	_uni,w
  1073  00C5  3E2B               	addlw	(low (_display| 0))& (0+255)
  1074  00C6  0084               	movwf	4
  1075  00C7  1383               	bcf	3,7	;select IRP bank0
  1076  00C8  0800               	movf	0,w
  1077  00C9  0087               	movwf	7	;volatile
  1078  00CA                     i1l959:
  1079                           
  1080                           ;Lab7.c: 55:                 disp = 1;
  1081  00CA  3001               	movlw	1
  1082  00CB  00F5               	movwf	_disp
  1083  00CC  3000               	movlw	0
  1084  00CD  00F6               	movwf	_disp+1
  1085                           
  1086                           ;Lab7.c: 56:                 break;
  1087  00CE  28FF               	goto	i1l62
  1088  00CF                     i1l961:
  1089                           
  1090                           ;Lab7.c: 58:                 PORTD = 0x00;
  1091  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1092  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1093  00D1  0188               	clrf	8	;volatile
  1094                           
  1095                           ;Lab7.c: 59:                 PORTC = 0x00;
  1096  00D2  0187               	clrf	7	;volatile
  1097  00D3                     i1l963:
  1098                           
  1099                           ;Lab7.c: 60:                 PORTD = 0x02;
  1100  00D3  3002               	movlw	2
  1101  00D4  0088               	movwf	8	;volatile
  1102  00D5                     i1l965:
  1103                           
  1104                           ;Lab7.c: 61:                 PORTC = display[dec];
  1105  00D5  0878               	movf	_dec,w
  1106  00D6  3E2B               	addlw	(low (_display| 0))& (0+255)
  1107  00D7  0084               	movwf	4
  1108  00D8  1383               	bcf	3,7	;select IRP bank0
  1109  00D9  0800               	movf	0,w
  1110  00DA  0087               	movwf	7	;volatile
  1111  00DB                     i1l967:
  1112                           
  1113                           ;Lab7.c: 62:                 disp = 2;
  1114  00DB  3002               	movlw	2
  1115  00DC  00F5               	movwf	_disp
  1116  00DD  3000               	movlw	0
  1117  00DE  00F6               	movwf	_disp+1
  1118                           
  1119                           ;Lab7.c: 63:                 break;
  1120  00DF  28FF               	goto	i1l62
  1121  00E0                     i1l969:
  1122                           
  1123                           ;Lab7.c: 65:                 PORTD = 0x00;
  1124  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1125  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1126  00E2  0188               	clrf	8	;volatile
  1127                           
  1128                           ;Lab7.c: 66:                 PORTC = 0x00;
  1129  00E3  0187               	clrf	7	;volatile
  1130  00E4                     i1l971:
  1131                           
  1132                           ;Lab7.c: 67:                 PORTD = 0x01;
  1133  00E4  3001               	movlw	1
  1134  00E5  0088               	movwf	8	;volatile
  1135  00E6                     i1l973:
  1136                           
  1137                           ;Lab7.c: 68:                 PORTC = display[cen];
  1138  00E6  0836               	movf	_cen,w
  1139  00E7  3E2B               	addlw	(low (_display| 0))& (0+255)
  1140  00E8  0084               	movwf	4
  1141  00E9  1383               	bcf	3,7	;select IRP bank0
  1142  00EA  0800               	movf	0,w
  1143  00EB  0087               	movwf	7	;volatile
  1144  00EC                     i1l975:
  1145                           
  1146                           ;Lab7.c: 69:                 disp =0;
  1147  00EC  01F5               	clrf	_disp
  1148  00ED  01F6               	clrf	_disp+1
  1149                           
  1150                           ;Lab7.c: 70:                 break;
  1151  00EE  28FF               	goto	i1l62
  1152  00EF                     i1l979:
  1153                           
  1154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1155                           ; Switch size 1, requested type "simple"
  1156                           ; Number of cases is 1, Range of values is 0 to 0
  1157                           ; switch strategies available:
  1158                           ; Name         Instructions Cycles
  1159                           ; simple_byte            4     3 (average)
  1160                           ; direct_byte           11     8 (fixed)
  1161                           ; jumptable            260     6 (fixed)
  1162                           ;	Chosen strategy is simple_byte
  1163  00EF  0876               	movf	_disp+1,w
  1164  00F0  3A00               	xorlw	0	; case 0
  1165  00F1  1903               	skipnz
  1166  00F2  28F4               	goto	i1l1185
  1167  00F3  28FF               	goto	i1l62
  1168  00F4                     i1l1185:
  1169                           
  1170                           ; Switch size 1, requested type "simple"
  1171                           ; Number of cases is 3, Range of values is 0 to 2
  1172                           ; switch strategies available:
  1173                           ; Name         Instructions Cycles
  1174                           ; simple_byte           10     6 (average)
  1175                           ; direct_byte           17     8 (fixed)
  1176                           ; jumptable            260     6 (fixed)
  1177                           ;	Chosen strategy is simple_byte
  1178  00F4  0875               	movf	_disp,w
  1179  00F5  3A00               	xorlw	0	; case 0
  1180  00F6  1903               	skipnz
  1181  00F7  28BE               	goto	i1l953
  1182  00F8  3A01               	xorlw	1	; case 1
  1183  00F9  1903               	skipnz
  1184  00FA  28CF               	goto	i1l961
  1185  00FB  3A03               	xorlw	3	; case 2
  1186  00FC  1903               	skipnz
  1187  00FD  28E0               	goto	i1l969
  1188  00FE  28FF               	goto	i1l62
  1189  00FF                     i1l62:
  1190                           
  1191                           ;Lab7.c: 73:         INTCONbits.T0IF = 0;
  1192  00FF  110B               	bcf	11,2	;volatile
  1193  0100                     i1l981:
  1194                           
  1195                           ;Lab7.c: 74:         TMR0 = 217;
  1196  0100  30D9               	movlw	217
  1197  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0103  0081               	movwf	1	;volatile
  1200  0104                     i1l65:
  1201  0104  0873               	movf	??_isr+3,w
  1202  0105  008A               	movwf	10
  1203  0106  0872               	movf	??_isr+2,w
  1204  0107  0084               	movwf	4
  1205  0108  0E71               	swapf	??_isr+1,w
  1206  0109  0083               	movwf	3
  1207  010A  0EFE               	swapf	btemp,f
  1208  010B  0E7E               	swapf	btemp,w
  1209  010C  0009               	retfie
  1210  010D                     __end_of_isr:
  1211  007E                     btemp	set	126	;btemp
  1212  007E                     wtemp0	set	126
  1213                           
  1214                           	psect	intentry
  1215  0004                     __pintentry:	
  1216                           ;incstack = 0
  1217                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1218                           
  1219  0004                     interrupt_function:
  1220  007E                     saved_w	set	btemp
  1221  0004  00FE               	movwf	btemp
  1222  0005  0E03               	swapf	3,w
  1223  0006  00F1               	movwf	??_isr+1
  1224  0007  0804               	movf	4,w
  1225  0008  00F2               	movwf	??_isr+2
  1226  0009  080A               	movf	10,w
  1227  000A  00F3               	movwf	??_isr+3
  1228  000B  120A  118A  28A2   	ljmp	_isr
  1229                           
  1230                           	psect	config
  1231                           
  1232                           ;Config register CONFIG1 @ 0x2007
  1233                           ;	Oscillator Selection bits
  1234                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1235                           ;	Watchdog Timer Enable bit
  1236                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1237                           ;	Power-up Timer Enable bit
  1238                           ;	PWRTE = ON, PWRT enabled
  1239                           ;	RE3/MCLR pin function select bit
  1240                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1241                           ;	Code Protection bit
  1242                           ;	CP = OFF, Program memory code protection is disabled
  1243                           ;	Data Code Protection bit
  1244                           ;	CPD = OFF, Data memory code protection is disabled
  1245                           ;	Brown Out Reset Selection bits
  1246                           ;	BOREN = OFF, BOR disabled
  1247                           ;	Internal External Switchover bit
  1248                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1249                           ;	Fail-Safe Clock Monitor Enabled bit
  1250                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1251                           ;	Low Voltage Programming Enable bit
  1252                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1253                           ;	In-Circuit Debugger Mode bit
  1254                           ;	DEBUG = 0x1, unprogrammed default
  1255  2007                     	org	8199
  1256  2007  30C4               	dw	12484
  1257                           
  1258                           ;Config register CONFIG2 @ 0x2008
  1259                           ;	Brown-out Reset Selection bit
  1260                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1261                           ;	Flash Program Memory Self Write Enable bits
  1262                           ;	WRT = OFF, Write protection off
  1263  2008                     	org	8200
  1264  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         3
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     11      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _main->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 27 15:01:32 2021

                      pc 0002             ___awdiv@sign 0025                       fsr 0004  
                    l312 0175                      l325 01D0                      _RB0 0030  
                    _RB1 0031                      u510 0142                      u511 0141  
                    u505 0134                      u530 0153                      u610 01A5  
                    u531 0152                      u611 01A4                      u620 01AF  
                    u525 0143                      u621 01AE                      u605 0197  
                    u550 0167                      u470 0114                      u551 0166  
                    u535 014F                      u471 0113                      u560 016C  
                    u480 011F                      u640 01C2                      u561 016B  
                    u545 015B                      u481 011E                      u641 01C1  
                    u625 01AB                      u490 0130                      u650 01C7  
                    u570 017D                      u491 012F                      u651 01C6  
                    u635 01B6                      u571 017C                      u580 0188  
                    u581 0187                      u590 0193                      u591 0192  
                    _dec 0078                      _cen 0036                      _isr 00A2  
                    fsr0 0004                      _uni 0035                      indf 0000  
           ___awmod@sign 0025                     l1101 018D                     l1111 01A5  
                   l1103 0193                     l1121 01C7                     l1113 01AF  
                   l1105 0196                     l1051 0119                     l1123 01CC  
                   l1115 01B5                     l1107 019D                     l1131 002F  
                   l1061 012A                     l1053 011B                     l1045 010D  
                   l1117 01BC                     l1109 01A1                     l1141 0039  
                   l1133 0030                     l1071 0142                     l1063 0130  
                   l1055 011F                     l1047 0110                     l1119 01C2  
                   l1151 0043                     l1143 003D                     l1135 0031  
                   l1127 0026                     l1073 0153                     l1065 0133  
                   l1081 0167                     l1057 0124                     l1049 0114  
                   l1161 0072                     l1153 0044                     l1145 0040  
                   l1137 0033                     l1129 002D                     l1083 016C  
                   l1075 0159                     l1067 013A                     l1059 0128  
                   l1091 0179                     l1163 0088                     l1155 0045  
                   l1147 0041                     l1139 0035                     l1085 0171  
                   l1077 015A                     l1069 013E                     l1093 017D  
                   l1157 0046                     l1149 0042                     l1079 0161  
                   l1095 0182                     l1159 005C                     l1097 0184  
                   l1089 0176                     l1099 0188                     ?_isr 0070  
                   _T0IF 005A                     _IOCB 0096                     _RBIF 0058  
                   i1l62 00FF                     i1l56 00B2                     i1l65 0104  
                   _TMR0 0001                     _disp 0075                     _cont 0077  
                   _main 0026                     _val1 0079                     btemp 007E  
                   start 000E                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 0176          __end_of___awmod 01D1                    _ANSEL 0188  
        ___awdiv@divisor 0020                    i1l941 00AC                    i1l943 00B0  
                  i1l961 00CF                    i1l953 00BE                    i1l945 00B6  
                  i1l937 00A2                    i1l971 00E4                    i1l963 00D3  
                  i1l955 00C2                    i1l947 00B8                    i1l939 00A6  
                  i1l981 0100                    i1l973 00E6                    i1l965 00D5  
                  i1l957 00C4                    i1l949 00B9                    i1l975 00EC  
                  i1l967 00DB                    i1l959 00CA                    i1l969 00E0  
                  i1l979 00EF          ___awdiv@counter 0024                    u43_20 00A6  
                  u43_21 00A5                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    u44_20 00AC                    u44_21 00AB  
                  u45_20 00B6                    u45_21 00B5                    u46_20 00BD  
                  u46_21 00BC                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 00A2                   ??_main 0028         ___awdiv@dividend 0022  
                 _ANSELH 0189                   i1l1185 00F4                   _OSCCON 008F  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0026  
        ___awmod@divisor 0020          ___awmod@counter 0024                   saved_w 007E  
__end_of__initialization 0022           __pcstackCOMMON 0070             __pidataBANK0 01E4  
             __pnvCOMMON 0078               __pmaintext 0026               __pintentry 0004  
                ___awdiv 010D                  ___awmod 0176                  __ptext1 0176  
                __ptext2 010D                  __ptext3 00A2                  _display 002B  
           __size_of_isr 006B         ___awmod@dividend 0022     end_of_initialization 0022  
    start_initialization 0011              __end_of_isr 010D               init_fetch0 01D1  
            __pdataBANK0 002B              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 0035                 ?___awdiv 0020  
               ?___awmod 0020        interrupt_function 0004         __size_of___awdiv 0069  
       __size_of___awmod 005B            __size_of_main 007C               _INTCONbits 000B  
               init_ram0 01D5                 intlevel1 0000               _OPTION_REG 0081  
